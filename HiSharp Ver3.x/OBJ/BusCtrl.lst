C51 COMPILER V9.60.0.0   BUSCTRL                                                           06/22/2021 15:07:26 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE BUSCTRL
OBJECT MODULE PLACED IN .\OBJ\BusCtrl.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE BusCtrl.c COMPACT OPTIMIZE(9,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\OB
                    -J\BusCtrl.lst) TABS(2) OBJECT(.\OBJ\BusCtrl.obj)

line level    source

   1          //  **************************************************************************
   2          //
   3          //       Copyright (c) 1992-2006 Professonal Computer Technology Co., Ltd
   4          //
   5          //      All rights are reserved. Reproduction in whole or in parts is
   6          //  prohibited without the prior written consent of the copyright owner.
   7          //  --------------------------------------------------------------------------
   8          //
   9          //  Module: BUSCTRL.C
  10          //
  11          //  Purpose: Implementation of BUSCTRL.
  12          //
  13          //  Version: 0.01                                   2006/10/22 10:39¤U¤È
  14          //
  15          //  Compiler: Keil 8051 C Compiler v7.2
  16          //
  17          //  Reference:
  18          //
  19          //
  20          //
  21          //  --------------------------------------------------------------------------
  22          //  Modification:
  23          //
  24          //  R0.01 2006/10/22 10:39¤U¤È Phoenix Chuang
  25          //  Reason:
  26          //    1. Original.
  27          //  Solution:
  28          //  
  29          //  **************************************************************************
  30          //  -----------------------------------
  31          //      Header Files
  32          //  ----------------------------------- 
  33          #include "Types.h"
  34          #include "BusCtrl.h"
  35          
  36          
  37          //  ------------------------------------
  38          //      Macro Definitions
  39          //  ------------------------------------ 
  40          
  41          
  42          //  ------------------------------------
  43          //      Type Definitions
  44          //  ------------------------------------
  45          
  46          
  47          //  ------------------------------------
  48          //      Variables Definitions
  49          //  ------------------------------------
  50          
  51          
  52          //  ------------------------------------
  53          //      Function Prototypes
  54          //  ------------------------------------
C51 COMPILER V9.60.0.0   BUSCTRL                                                           06/22/2021 15:07:26 PAGE 2   

  55          
  56          
  57          // ===========================================================================
  58          //                      Parallel function description
  59          //==================================================================================
  60          //  
  61          //  
  62          //  
  63          
  64          void PCT_PageChange(U8 _pg)
  65          {
  66   1        U8 _dvc = 0;      //... temporal
  67   1        U8 _addr=0xFF;
  68   1      
  69   1        EA = OFF;   // Disable All Interrupt
  70   1        //... P[7:4]:INT[5:2], P1_3:HALE, P1_2:HRDB, P1_1:HWRB, P1_0:HSPB
  71   1        MCTRL = 0xf6;   //... initial state
  72   1        //if(_pg == DVC_PG0){ HCSB1=0;  HCSB0=0;}
  73   1        //else if(_pg == DVC_PG1){  HCSB1=0;  HCSB0=1;}
  74   1        //else if(_pg == DVC_PG2){  HCSB1=1;  HCSB0=0;}
  75   1        HCSB0=0;
  76   1        HCSB1=0;
  77   1      
  78   1        MDATA = _addr;
  79   1        HALE = 1; 
  80   1        HALE = 0;
  81   1        MDATA = _pg;
  82   1        HWRB = 0;       
  83   1        HWRB = 1;
  84   1      
  85   1        MCTRL = 0xf6;   //... initial state
  86   1        //HCSB0=1;
  87   1        //HCSB1=1;
  88   1        MDATA = 0xff;
  89   1        EA = ON;    // Enable All Interrupt
  90   1      }
  91          
  92          void PCT_WriteAsicByte(U8 _dvc, U8 _pg, U8 _addr, U8 _wdat)
  93          {
  94   1        _dvc = 0;     //... temporal
  95   1      
  96   1        EA = OFF;   // Disable All Interrupt
  97   1        //... P[7:4]:INT[5:2], P1_3:HALE, P1_2:HRDB, P1_1:HWRB, P1_0:HSPB
  98   1      
  99   1        #if (TW2837==ON)
 100   1        PCT_PageChange(_pg);
 101   1        HCSB0=0;
 102   1        HCSB1=0;
 103   1        #endif
 104   1      
 105   1        MCTRL = 0xf6;   //... initial state
 106   1      
 107   1      //  if(_pg == DVC_PG0){ HCSB1=0;  HCSB0=0;}
 108   1      //  else if(_pg == DVC_PG1){  HCSB1=0;  HCSB0=1;}
 109   1      //  else if(_pg == DVC_PG2){  HCSB1=1;  HCSB0=0;}
 110   1        
 111   1        MDATA = _addr;
 112   1        HALE = 1; 
 113   1        HALE = 0;
 114   1        MDATA = _wdat;
 115   1        HWRB = 0;       
 116   1        HWRB = 1;
C51 COMPILER V9.60.0.0   BUSCTRL                                                           06/22/2021 15:07:26 PAGE 3   

 117   1      
 118   1        MCTRL = 0xf6;   //... initial state
 119   1      //  HCSB0=1;
 120   1      //  HCSB1=1;
 121   1        MDATA = 0xff;
 122   1        EA = ON;    // Enable All Interrupt
 123   1      }
 124          
 125          //==================================================================================
 126          //  
 127          //  
 128          //  
 129          void PCT_WriteAsicTable(U8 _dvc, U8 _pg, U8 _addr, U8 *_tbl_ptr, U8 _tbl_cnt)
 130          {
 131   1        _dvc = 0;     //... temporal
 132   1      
 133   1        EA = OFF;   // Disable All Interrupt
 134   1        //... P[7:4]:INT[5:2], P1_3:HALE, P1_2:HRDB, P1_1:HWRB, P1_0:HSPB
 135   1        //MCTRL_set();///MCTRL = 0xf6;    //... initial state
 136   1      
 137   1        #if (TW2837==ON)
 138   1        PCT_PageChange(_pg);
 139   1        HCSB0=0;
 140   1        HCSB1=0;  
 141   1        #endif
 142   1        
 143   1          MCTRL = 0xf6;   //... initial state
 144   1      
 145   1      //  if(_pg == DVC_PG0){ HCSB1=0;  HCSB0=0;}
 146   1      //  else if(_pg == DVC_PG1){  HCSB1=0;  HCSB0=1;}
 147   1      //  else if(_pg == DVC_PG2){  HCSB1=1;  HCSB0=0;}
 148   1            //  #ifdef BDelay
 149   1                    //Wait_ms(Delay_val);//ryan..
 150   1            //        DELAY_FOR(Delay_val); 
 151   1                         //     #endif
 152   1      
 153   1        do {
 154   2          MDATA = _addr++;
 155   2          
 156   2          HALE = 1;
 157   2                                
 158   2      
 159   2          HALE = 0;
 160   2        
 161   2          MDATA = *_tbl_ptr++;
 162   2          HWRB = 0;
 163   2                                 
 164   2      
 165   2          HWRB = 1;
 166   2        }while( --_tbl_cnt!=0 );
 167   1      
 168   1      //  MCTRL_set();///MCTRL = 0xf6;    //... initial state
 169   1      
 170   1          MCTRL = 0xf6;   //... initial state
 171   1      
 172   1        #if 1
 173   1      //  HCSB0=1;
 174   1      //  HCSB1=1;
 175   1        MDATA = 0xff;
 176   1        #endif
 177   1        EA = ON;    // Enable All Interrupt
 178   1      }
C51 COMPILER V9.60.0.0   BUSCTRL                                                           06/22/2021 15:07:26 PAGE 4   

 179          
 180          
 181          //==================================================================================
 182          //  
 183          //  
 184          //  
 185          U8 PCT_ReadAsicByte(U8 _dvc, U8 _pg, U8 _addr)
 186          {
 187   1        register U8 _rdat_;
 188   1      
 189   1        EA = OFF;   // Disable All Interrupt
 190   1        #if (TW2837==ON)
 191   1        PCT_PageChange(_pg);
 192   1        HCSB0=0;
 193   1        HCSB1=0;  
 194   1        #endif
 195   1        
 196   1        //... P[7:4]:INT[5:2], P1_3:HALE, P1_2:HRDB, P1_1:HWRB, P1_0:HSPB
 197   1        MCTRL = 0xf6;   //... initial state
 198   1      
 199   1        _dvc = 0;     //... temporal
 200   1      //  if(_pg == DVC_PG0){ HCSB1=0; HCSB0=0;}
 201   1      /// else if(_pg == DVC_PG1){ HCSB1=0; HCSB0=1;}
 202   1      //  else if(_pg == DVC_PG2){ HCSB1=1; HCSB0=0;}
 203   1      
 204   1        MDATA = _addr;
 205   1        HALE = 1;
 206   1        HALE = 0;
 207   1        MDATA = 0xff;   // port0(MDATA) input mode
 208   1        HRDB = 0;
 209   1        _rdat_ = MDATA;
 210   1        HRDB = 1;
 211   1      
 212   1        MCTRL = 0xf6;   //... initial state
 213   1      //  HCSB0=1;
 214   1      //  HCSB1=1;
 215   1        EA = ON;    // Enable All Interrupt
 216   1        return _rdat_;
 217   1      }
 218          
 219          
 220          //==================================================================================
 221          //  
 222          //  Write Register Address & Data form Table until address=0xFFFF then STOP
 223          //  
 224          void PCT_WriteSTable(U8 _dvc, WRITE_REG_DATA *_tbl_ptr)
 225          {
 226   1        #define PAGE GETHBYTE(_tbl_ptr->addr)
 227   1        #define ADDR GETLBYTE(_tbl_ptr->addr)
 228   1      
 229   1        _dvc = 0;
 230   1        while( _tbl_ptr->addr!=0xFFFF ) {
 231   2            if(TW28_ReadByte(PAGE, ADDR) != _tbl_ptr->dat)//William @HS 2007 0829 Ver3.4
 232   2              {
 233   3          TW28_WriteByte(PAGE, ADDR, _tbl_ptr->dat);
 234   3              }
 235   2          _tbl_ptr++; 
 236   2        }
 237   1      }
 238          
 239          //==================================================================================
 240          //  
C51 COMPILER V9.60.0.0   BUSCTRL                                                           06/22/2021 15:07:26 PAGE 5   

 241          // Change to I2C Control Mode
 242          //  
 243          void PTC_SwitchToI2CMode(void)
 244          {
 245   1      #ifdef TW28_I2CBUS
                HSPB  = 1;
                HALE  = 1;
                MDATA   = 0xFF; 
                HCSB0   = 0;
                HCSB1   = 0;
                HRDB  = 0;
                HWRB  = 0;
              #endif
 254   1      }
 255          
 256          // ===========================================================================
 257          // END of File 
 258          // ===========================================================================
 259          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    260    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----      15
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
