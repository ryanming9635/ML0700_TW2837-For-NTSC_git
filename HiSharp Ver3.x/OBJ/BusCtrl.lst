C51 COMPILER V9.60.0.0   BUSCTRL                                                           07/13/2021 11:06:05 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE BUSCTRL
OBJECT MODULE PLACED IN .\OBJ\BusCtrl.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE BusCtrl.c COMPACT OPTIMIZE(9,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\OB
                    -J\BusCtrl.lst) TABS(2) OBJECT(.\OBJ\BusCtrl.obj)

line level    source

   1          //  **************************************************************************
   2          //
   3          //       Copyright (c) 1992-2006 Professonal Computer Technology Co., Ltd
   4          //
   5          //      All rights are reserved. Reproduction in whole or in parts is
   6          //  prohibited without the prior written consent of the copyright owner.
   7          //  --------------------------------------------------------------------------
   8          //
   9          //  Module: BUSCTRL.C
  10          //
  11          //  Purpose: Implementation of BUSCTRL.
  12          //
  13          //  Version: 0.01                                   2006/10/22 10:39¤U¤È
  14          //
  15          //  Compiler: Keil 8051 C Compiler v7.2
  16          //
  17          //  Reference:
  18          //
  19          //
  20          //
  21          //  --------------------------------------------------------------------------
  22          //  Modification:
  23          //
  24          //  R0.01 2006/10/22 10:39¤U¤È Phoenix Chuang
  25          //  Reason:
  26          //    1. Original.
  27          //  Solution:
  28          //  
  29          //  **************************************************************************
  30          //  -----------------------------------
  31          //      Header Files
  32          //  ----------------------------------- 
  33          #include "Types.h"
  34          #include "BusCtrl.h"
  35          
  36          
  37          //  ------------------------------------
  38          //      Macro Definitions
  39          //  ------------------------------------ 
  40          
  41          
  42          //  ------------------------------------
  43          //      Type Definitions
  44          //  ------------------------------------
  45          
  46          
  47          //  ------------------------------------
  48          //      Variables Definitions
  49          //  ------------------------------------
  50          
  51          
  52          //  ------------------------------------
  53          //      Function Prototypes
  54          //  ------------------------------------
C51 COMPILER V9.60.0.0   BUSCTRL                                                           07/13/2021 11:06:05 PAGE 2   

  55          
  56          
  57          // ===========================================================================
  58          //                      Parallel function description
  59          //==================================================================================
  60          //  
  61          //  
  62          //  
  63          
  64          extern BYTE TW2837IDCheck;
  65          
  66          void PCT_PageChange(U8 _pg)
  67          {
  68   1        U8 _dvc = 0;      //... temporal
  69   1        U8 _addr=0xFF;
  70   1      
  71   1        EA = OFF;   // Disable All Interrupt
  72   1        //... P[7:4]:INT[5:2], P1_3:HALE, P1_2:HRDB, P1_1:HWRB, P1_0:HSPB
  73   1        MCTRL = 0xf6;   //... initial state
  74   1        //if(_pg == DVC_PG0){ HCSB1=0;  HCSB0=0;}
  75   1        //else if(_pg == DVC_PG1){  HCSB1=0;  HCSB0=1;}
  76   1        //else if(_pg == DVC_PG2){  HCSB1=1;  HCSB0=0;}
  77   1        HCSB0=0;///1;
  78   1        HCSB1=0;///1;
  79   1      
  80   1        MDATA = _addr;
  81   1        HALE = 1; 
  82   1        HALE = 0;
  83   1        MDATA = _pg;
  84   1        HWRB = 0;       
  85   1        HWRB = 1;
  86   1      
  87   1        MCTRL = 0xf6;   //... initial state
  88   1        HCSB0=0;///1
  89   1        HCSB1=0;///1;
  90   1        MDATA = 0xff;
  91   1        EA = ON;    // Enable All Interrupt
  92   1      }
  93          
  94          void PCT_WriteAsicByte(U8 _dvc, U8 _pg, U8 _addr, U8 _wdat)
  95          {
  96   1        _dvc = 0;     //... temporal
  97   1      
  98   1        EA = OFF;   // Disable All Interrupt
  99   1        //... P[7:4]:INT[5:2], P1_3:HALE, P1_2:HRDB, P1_1:HWRB, P1_0:HSPB
 100   1      
 101   1        if(TW2837IDCheck==TRUE)
 102   1        PCT_PageChange(_pg);
 103   1      
 104   1        MCTRL = 0xf6;   //... initial state
 105   1      
 106   1        if(TW2837IDCheck==TRUE)
 107   1        {
 108   2        HCSB0=0;///1;
 109   2        HCSB1=0;///1;
 110   2        }
 111   1        else
 112   1        {
 113   2      
 114   2        if(_pg == DVC_PG0){ HCSB1=0;  HCSB0=0;}
 115   2        else if(_pg == DVC_PG1){  HCSB1=0;  HCSB0=1;}
 116   2        else if(_pg == DVC_PG2){  HCSB1=1;  HCSB0=0;}
C51 COMPILER V9.60.0.0   BUSCTRL                                                           07/13/2021 11:06:05 PAGE 3   

 117   2        }
 118   1        
 119   1        MDATA = _addr;
 120   1        HALE = 1; 
 121   1        HALE = 0;
 122   1        MDATA = _wdat;
 123   1        HWRB = 0;       
 124   1        HWRB = 1;
 125   1      
 126   1        MCTRL = 0xf6;   //... initial state
 127   1      
 128   1      if(TW2837IDCheck==TRUE)
 129   1      {
 130   2        HCSB0=0;///1;
 131   2        HCSB1=0;///1;
 132   2      }
 133   1      else
 134   1      {
 135   2        HCSB0=1;
 136   2        HCSB1=1;
 137   2      }
 138   1        MDATA = 0xff;
 139   1        EA = ON;    // Enable All Interrupt
 140   1      }
 141          
 142          //==================================================================================
 143          //  
 144          //  
 145          //  
 146          void PCT_WriteAsicTable(U8 _dvc, U8 _pg, U8 _addr, U8 *_tbl_ptr, U8 _tbl_cnt)
 147          {
 148   1        _dvc = 0;     //... temporal
 149   1      
 150   1        EA = OFF;   // Disable All Interrupt
 151   1        //... P[7:4]:INT[5:2], P1_3:HALE, P1_2:HRDB, P1_1:HWRB, P1_0:HSPB
 152   1        //MCTRL_set();///MCTRL = 0xf6;    //... initial state
 153   1      
 154   1        if(TW2837IDCheck==TRUE)
 155   1        PCT_PageChange(_pg);
 156   1      
 157   1          MCTRL = 0xf6;   //... initial state
 158   1      
 159   1        if(TW2837IDCheck==TRUE)
 160   1        {
 161   2        HCSB0=0;///1;
 162   2        HCSB1=0;///1;
 163   2        }
 164   1        else
 165   1        {
 166   2      
 167   2        if(_pg == DVC_PG0){ HCSB1=0;  HCSB0=0;}
 168   2        else if(_pg == DVC_PG1){  HCSB1=0;  HCSB0=1;}
 169   2        else if(_pg == DVC_PG2){  HCSB1=1;  HCSB0=0;}
 170   2        } 
 171   1              
 172   1        do {
 173   2          MDATA = _addr++;
 174   2          
 175   2          HALE = 1;         
 176   2          HALE = 0;
 177   2        
 178   2          MDATA = *_tbl_ptr++;
C51 COMPILER V9.60.0.0   BUSCTRL                                                           07/13/2021 11:06:05 PAGE 4   

 179   2          HWRB = 0;                       
 180   2          HWRB = 1;
 181   2        }while( --_tbl_cnt!=0 );
 182   1      
 183   1      //  MCTRL_set();///MCTRL = 0xf6;    //... initial state
 184   1      
 185   1          MCTRL = 0xf6;   //... initial state
 186   1      
 187   1        if(TW2837IDCheck==TRUE)
 188   1        {
 189   2        HCSB0=0;///1;
 190   2        HCSB1=0;///1;
 191   2        }
 192   1        else
 193   1        {
 194   2        HCSB0=1;
 195   2        HCSB1=1;
 196   2        } 
 197   1        MDATA = 0xff;
 198   1      
 199   1        EA = ON;    // Enable All Interrupt
 200   1      }
 201          
 202          
 203          //==================================================================================
 204          //  
 205          //  
 206          //  
 207          U8 PCT_ReadAsicByte(U8 _dvc, U8 _pg, U8 _addr)
 208          {
 209   1        register U8 _rdat_;
 210   1      
 211   1        EA = OFF;   // Disable All Interrupt
 212   1      
 213   1        if(TW2837IDCheck==TRUE)
 214   1        PCT_PageChange(_pg);
 215   1        
 216   1        //... P[7:4]:INT[5:2], P1_3:HALE, P1_2:HRDB, P1_1:HWRB, P1_0:HSPB
 217   1        MCTRL = 0xf6;   //... initial state
 218   1      
 219   1        _dvc = 0;     //... temporal
 220   1        
 221   1        if(TW2837IDCheck==TRUE)
 222   1        {
 223   2        HCSB0=0;///1;
 224   2        HCSB1=0;///1;
 225   2        }
 226   1        else
 227   1        {
 228   2      
 229   2        if(_pg == DVC_PG0){ HCSB1=0;  HCSB0=0;}
 230   2        else if(_pg == DVC_PG1){  HCSB1=0;  HCSB0=1;}
 231   2        else if(_pg == DVC_PG2){  HCSB1=1;  HCSB0=0;}
 232   2        } 
 233   1        
 234   1        MDATA = _addr;
 235   1        HALE = 1;
 236   1        HALE = 0;
 237   1        MDATA = 0xff;   // port0(MDATA) input mode
 238   1        HRDB = 0;
 239   1        _rdat_ = MDATA;
 240   1        HRDB = 1;
C51 COMPILER V9.60.0.0   BUSCTRL                                                           07/13/2021 11:06:05 PAGE 5   

 241   1      
 242   1        MCTRL = 0xf6;   //... initial state
 243   1        
 244   1        if(TW2837IDCheck==TRUE)
 245   1        {
 246   2        HCSB0=0;///1;
 247   2        HCSB1=0;///1;
 248   2        }
 249   1        else
 250   1        {
 251   2        HCSB0=1;
 252   2        HCSB1=1;
 253   2        }
 254   1      
 255   1        EA = ON;    // Enable All Interrupt
 256   1        return _rdat_;
 257   1      }
 258          
 259          
 260          //==================================================================================
 261          //  
 262          //  Write Register Address & Data form Table until address=0xFFFF then STOP
 263          //  
 264          void PCT_WriteSTable(U8 _dvc, WRITE_REG_DATA *_tbl_ptr)
 265          {
 266   1        #define PAGE GETHBYTE(_tbl_ptr->addr)
 267   1        #define ADDR GETLBYTE(_tbl_ptr->addr)
 268   1      
 269   1        _dvc = 0;
 270   1        while( _tbl_ptr->addr!=0xFFFF ) {
 271   2            if(TW28_ReadByte(PAGE, ADDR) != _tbl_ptr->dat)//William @HS 2007 0829 Ver3.4
 272   2              {
 273   3          TW28_WriteByte(PAGE, ADDR, _tbl_ptr->dat);
 274   3              }
 275   2          _tbl_ptr++; 
 276   2        }
 277   1      }
 278          
 279          //==================================================================================
 280          //  
 281          // Change to I2C Control Mode
 282          //  
 283          void PTC_SwitchToI2CMode(void)
 284          {
 285   1      #ifdef TW28_I2CBUS
                HSPB  = 1;
                HALE  = 1;
                MDATA   = 0xFF; 
                HCSB0   = 0;
                HCSB1   = 0;
                HRDB  = 0;
                HWRB  = 0;
              #endif
 294   1      }
 295          #if 0
              void  SetAsicFlgType(U8 _dvc, U8 _pg, U8 _addr, U8 _flg, U8 _data)
              {
                U8 _t1_;
              
                _t1_ = PCT_ReadAsicByte(_dvc,_pg,_addr);
                _t1_ = (_t1_ & ~_flg)|_data;
                PCT_WriteAsicByte(_dvc,_pg,_addr,_t1_);
C51 COMPILER V9.60.0.0   BUSCTRL                                                           07/13/2021 11:06:05 PAGE 6   

              }
              #endif
 305          
 306          // ===========================================================================
 307          // END of File 
 308          // ===========================================================================
 309          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    485    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----      15
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
