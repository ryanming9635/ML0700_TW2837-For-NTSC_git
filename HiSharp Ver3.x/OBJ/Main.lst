C51 COMPILER V9.60.0.0   MAIN                                                              06/22/2021 15:07:26 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\OBJ\Main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Main.c COMPACT OPTIMIZE(9,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\OBJ\M
                    -ain.lst) TABS(2) OBJECT(.\OBJ\Main.obj)

line level    source

   1          //  **************************************************************************
   2          //
   3          //       Copyright (c) 1992-2006 Professonal Computer Technology Co., Ltd
   4          //
   5          //      All rights are reserved. Reproduction in whole or in parts is
   6          //  prohibited without the prior written consent of the copyright owner.
   7          //  --------------------------------------------------------------------------
   8          //
   9          //  Module: Main.C
  10          //
  11          //  Purpose: Implementation of Main.
  12          //
  13          //  Version: 0.01                                   2006/10/22 10:39¤U¤È
  14          //
  15          //  Compiler: Keil 8051 C Compiler v7.2
  16          //
  17          //  Reference:
  18          //
  19          //
  20          //
  21          //  --------------------------------------------------------------------------
  22          //  Modification:
  23          //
  24          //  R0.01 2006/10/22 10:39¤U¤È Phoenix Chuang
  25          //  Reason:
  26          //    1. Original.
  27          //  Solution:
  28          //  
  29          //  **************************************************************************
  30          //  -----------------------------------
  31          //      Header Files
  32          //  ----------------------------------- 
  33          #include "Types.h"
  34          #include "Main.h"
  35          #include "Timer.h"
  36          #include "UART.h"
  37          #include "BusCtrl.h"
  38          #include "TW2835_Init.h"
  39          #include "CommandShell.h"
  40          #include "OSDAction.h"
  41          
  42          
  43          //  ------------------------------------
  44          //      Macro Definitions
  45          //  ------------------------------------ 
  46          
  47          
  48          //  ------------------------------------
  49          //      Type Definitions
  50          //  ------------------------------------
  51          
  52          
  53          //  ------------------------------------
  54          //      Variables Definitions
C51 COMPILER V9.60.0.0   MAIN                                                              06/22/2021 15:07:26 PAGE 2   

  55          //  ------------------------------------
  56            U16 _delay;
  57            U8 bdata commFlag;
  58            sbit comm_chk_flag = commFlag^0;
  59            sbit osd_chk_flag = commFlag^1;
  60            COMMAND_BUFFER RScommand;
  61            bit VlossFlag;
  62          
  63          //  ------------------------------------
  64          //      Function Prototypes
  65          //  ------------------------------------
  66          
  67          
  68          // ===========================================================================
  69          //                      Parallel function description
  70          // ===========================================================================
  71          //
  72          //  Command Shell for Debug
  73          //
  74          void CommandShell(void){
  75   1      //Kane @HS 2007 0809 Ver3.5>>>>
  76   1      #if 1
  77   1        data BYTE ch;
  78   1      
  79   1        if( RS_RxReady() == true && RScommand.commFlage==false ) {
  80   2          ch=RS_rx();
  81   2          if( comm_chk_flag ) RS_tx(ch);
  82   2      
  83   2          switch(ch) {
  84   3            case '\r':
  85   3              RScommand.commBuf[RScommand.WritePtr] = '\0';
  86   3              RScommand.commFlage = true;
  87   3              chkStartCommShell(RScommand.commBuf);
  88   3              if( comm_chk_flag ) NewLine();
  89   3              break;
  90   3            
  91   3            case 0x08:
  92   3              RScommand.WritePtr--;
  93   3              break;
  94   3      
  95   3            default:
  96   3              RScommand.commBuf[RScommand.WritePtr] = ch;
  97   3              RScommand.WritePtr++;
  98   3              break;
  99   3          }
 100   2        }
 101   1      #endif
 102   1      }
 103          
 104          // ===========================================================================
 105          //
 106          //
 107          //
 108          void NewLine(void)
 109          {
 110   1        puts("\r\n");                   
 111   1      }
 112          
 113          // ===========================================================================
 114          //
 115          //
 116          //
C51 COMPILER V9.60.0.0   MAIN                                                              06/22/2021 15:07:26 PAGE 3   

 117          void PutsP(BYTE *ptr)
 118          {
 119   1        data BYTE ch;
 120   1        
 121   1        while(*ptr!='\0') {
 122   2          ch = *ptr++;
 123   2          RS_tx(ch);
 124   2        }
 125   1      }
 126          
 127          // ===========================================================================
 128          //
 129          //  Restart Command Shell 
 130          //
 131          void ResetCommSell(void)
 132          {
 133   1        if( comm_chk_flag ) PutsP("Debug Program >");
 134   1      
 135   1        RScommand.WritePtr = 0;
 136   1        RScommand.commFlage = false;
 137   1        RScommand.commBuf[0] = '\0';
 138   1      }
 139          
 140          // ===========================================================================
 141          //
 142          //  Falsh OSD Contril
 143          //
 144          void PCT_FlashOSDCtrl(U8 _on)
 145          {
 146   1        if(_on) osd_chk_flag=false;
 147   1        else osd_chk_flag=true;
 148   1      }
 149          
 150          // ===========================================================================
 151          //
 152          //  Initial Command Shell 
 153          //
 154          void InitialCommShell(void)
 155          {
 156   1        comm_chk_flag=false;
 157   1        osd_chk_flag=false;
 158   1      
 159   1        //VlossState=0;
 160   1        VlossFlag=0;
 161   1        VlossCount=0;
 162   1      }
 163          
 164          // ===========================================================================
 165          //
 166          //  Start Command Shell 
 167          //
 168          void chkStartCommShell(char *ptr)
 169          {
 170   1        if( comm_chk_flag ) return;
 171   1        if( strcmp(ptr,"PCT")==0 ) comm_chk_flag=true;
 172   1      }
 173          
 174          void Wait_ms(U16 Tms)
 175          {
 176   1      #if (TW2835_MCU == TW8806_MODEL_WINBOND)  //Pinchi 20150325 add
                #define CPU_CLK_KHZ   40000
                #define CountStick    (1000000U/((CPU_CLK_KHZ*CPU_SPEED)/12))/20
C51 COMPILER V9.60.0.0   MAIN                                                              06/22/2021 15:07:26 PAGE 4   

              #else  //Megawin
 180   1        #define CPU_CLK_KHZ   22118
 181   1        #define CountStick    ((1000000U/((CPU_CLK_KHZ*CPU_SPEED)/12))/20)*8  
 182   1      #endif
 183   1        #define CPU_SPEED     1    
 184   1      
 185   1        U16 count;
 186   1      
 187   1        while(Tms)
 188   1        {
 189   2          for(count=0; count<CountStick; count++);//total 20 clock for this loop
 190   2            Tms--;
 191   2        }
 192   1      }
 193          
 194          // ===========================================================================
 195          //
 196          //
 197          //
 198          void main(void)
 199          {
 200   1        U8 Counter=0;
 201   1        U8 OsdCount1=200;//Kane @HS 2007 0725 Ver3.4
 202   1        U8 OsdCount2=100;//Kane @HS 2007 0725 Ver3.4
 203   1        //BYTE val;
 204   1      
 205   1        InitialMPU(); 
 206   1        InitialCommShell();
 207   1        PTC_SwitchToI2CMode();
 208   1        PCT_InitialTW2835();  // Initial RssetN for TW2835
 209   1        
 210   1        ResetCommSell();
 211   1        //PCT_CheckSystem();
 212   1      
 213   1        while(1){
 214   2        CommandShell();
 215   2        if(RScommand.commFlage == true) PCT_RunCommShell(RScommand.commBuf); 
 216   2        if(RScommand.commFlage == true) ResetCommSell(); 
 217   2      
 218   2        /*
 219   2        val=TW28_ReadByte(0x00,0x30);
 220   2        if(val==0)
 221   2          TW28_WriteByte(0x00,0x31,TW28_ReadByte(0x00,0x31)&0x7f);
 222   2        if(val!=VlossState)
 223   2          {
 224   2            //VlossCount++;
 225   2          //if(VlossCount>=5)
 226   2            //{
 227   2            VlossState=val;
 228   2            VlossFlag=1;
 229   2            //VlossCount=0;
 230   2            //}
 231   2          }
 232   2        //else
 233   2          //VlossCount=0; 
 234   2        */
 235   2      #if 1  //pinchi test
 236   2          //William-V3.10-20100206>>>>>>>>>>>>>>>>
 237   2        if(VlossFlag==1)
 238   2        {
 239   3          if(PCT_CheckSystem())//Kane Modified
 240   3            VlossFlag=0;
C51 COMPILER V9.60.0.0   MAIN                                                              06/22/2021 15:07:26 PAGE 5   

 241   3        }
 242   2        //<<<<<<<<<<<<<<<<<<<<<<<
 243   2      #endif    
 244   2        if(RS_RxReady()) EnUserTimer(USERTMID1,OsdCount1);//Kane @HS 2007 0725 Ver3.4
 245   2        if(USERTMVAL1==1) {
 246   3          //PCT_AudioActionForHS();
 247   3          //PCT_OSDActionForHS();
 248   3          //PCT_FlashOSDCtrl(OFF);
 249   3          DisUserTimer(USERTMID1);
 250   3          EnUserTimer(USERTMID0,OsdCount2);//Kane @HS 2007 0725 Ver3.4  // Reset Scan Time, Delay Check and show
 251   3        }
 252   2        if(USERTMVAL0==1) {
 253   3          PCT_GetVideoSignalStatus(); // Check and Show "VLoss", scan time = 500ms
 254   3          EnUserTimer(USERTMID0,20);
 255   3        }
 256   2        }
 257   1        OsdCount1 = 10;//Kane @HS 2007 0725 Ver3.4
 258   1        OsdCount2 = 20;//Kane @HS 2007 0725 Ver3.4
 259   1      }
 260          
 261          // ===========================================================================
 262          //
 263          //
 264          //
 265          void InitialMPU(void){
 266   1      
 267   1        IP = 0x00;
 268   1        IE = 0x00;    
 269   1      
 270   1      #if (TW2835_MCU == TW8816_MODEL_MEGAWIN)  //Pinchi 20150323 add
 271   1        PCON = 0x80;  // Set SMOD bit7 in power ctrl reg
 272   1                // This bit doubles the baud rate
 273   1      #else
                PCON = 0x00;  // Clear SMOD bit7 in power ctrl reg 
                        // This bit doubles the baud rate
              #endif
 277   1      
 278   1        PSW  = 0x00;  // Set Program state Register
 279   1        TMOD = 0x21;  // Set Timer MODE Register
 280   1                // Timer0: MODE=1, 16-BIT Timer
 281   1                // Timer1: MODE=2, 8-BIT Auto Reload )
 282   1        TCON = 0x00;  // Set Timer0/Timer1 Control Register
 283   1                // Timer0=OFF,Timer1=OFF
 284   1        SCON = 0x52;  // Setup Serial control Register
 285   1                // Mode 1: Start Bit=1,Stop Bit=1,Data Bit=8 
 286   1                // and ready Transmit
 287   1                // REN: enable receiver 
 288   1        P3M0=0x00;
 289   1        P3M1=0x10;//ryan@20180322
 290   1        
 291   1        InitialUART();
 292   1        InitialTimer0();
 293   1        
 294   1        TI = 1;     //* Set TI to indicate ready to xmit */
 295   1        EA=1;
 296   1        _nop_();
 297   1      }
 298          
 299          
 300          
 301          // ===========================================================================
 302          // END of File 
C51 COMPILER V9.60.0.0   MAIN                                                              06/22/2021 15:07:26 PAGE 6   

 303          // ===========================================================================
*** WARNING C294 IN LINE 257 OF Main.c: unreachable code


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    457    ----
   CONSTANT SIZE    =     23    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =     45      13
   DATA SIZE        =      1       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
