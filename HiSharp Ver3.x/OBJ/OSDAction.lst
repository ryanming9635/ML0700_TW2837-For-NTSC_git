C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE OSDACTION
OBJECT MODULE PLACED IN .\OBJ\OSDAction.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE OSDAction.c COMPACT OPTIMIZE(9,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\
                    -OBJ\OSDAction.lst) TABS(2) OBJECT(.\OBJ\OSDAction.obj)

line level    source

   1          //  **************************************************************************
   2          //
   3          //       Copyright (c) 1992-2006 Professonal Computer Technology Co., Ltd
   4          //
   5          //      All rights are reserved. Reproduction in whole or in parts is
   6          //  prohibited without the prior written consent of the copyright owner.
   7          //  --------------------------------------------------------------------------
   8          //
   9          //  Module: OSDAction.C
  10          //
  11          //  Purpose: Implementation of OSD Action.
  12          //
  13          //  Version: 0.01                                   2006/12/25 09:43¤W¤È
  14          //
  15          //  Compiler: Keil 8051 C Compiler v7.2
  16          //
  17          //  Reference:
  18          //
  19          //
  20          //
  21          //  --------------------------------------------------------------------------
  22          //  Modification:
  23          //
  24          //  R0.01 2006/12/25 09:43¤W¤È Phoenix Chuang
  25          //  Reason:
  26          //    1. Original.
  27          //  Solution:
  28          //  
  29          //  **************************************************************************
  30          //  -----------------------------------
  31          //      Header Files
  32          //  ----------------------------------- 
  33          #include "Types.h"
  34          #include "TW28xx_Video.h"
  35          #include "Timer.h"
  36          #include "BusCtrl.h"
  37          #include "CommandShell.h"
  38          #include "OSDAction.h"
  39          #include "OSDCtrl.h"
  40          #include "OSD_Graph.h"
  41          #include "Main.h"  //Pinchi 20150323 add
  42          
  43          
  44          //  ------------------------------------
  45          //      Macro Definitions
  46          //  ------------------------------------ 
  47          #define GRAPH_FONT
  48          #ifndef GRAPH_FONT
                #define DrawString(a, b, c)   PCT_ShowOSDString(PTH_X, a, b, c)
              #else
  51            #define DrawString(a, b, c)   PCT_ShowGraphString(PTH_X, a, b, c)
  52          #endif
  53          
  54          #define LOCATE_XM0  20
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 2   

  55          #define LOCATE_XM1  41
  56          #define LOCATE_XM2  62
  57          
  58          #define LOCATE_YT0  0
  59          #define LOCATE_YT0_P  1//for holger Pal
  60          #define LOCATE_YT1  15
  61          #define LOCATE_YT2  18
  62          
  63          code unsigned char camstr[7][3]={ {0x05,'\0'},//"A",
  64                            {0x06,'\0'},//"B",
  65                            {0x07,'\0'},//"C",
  66                            {0x08,'\0'},//"R",
  67                            {0x09,'\0'},//"M",
  68                            {0x0A,'\0'},//"J",
  69                          #if 1  //Pinchi 20150513 add new 'S' for SEQ mode
  70                            {0x1F,'\0'},//"S",
  71                          #else
                                {0x12,'\0'},//"S",
                              #endif
  74          };
  75          
  76          //  ------------------------------------
  77          //      Type Definitions
  78          //  ------------------------------------
  79          
  80          
  81          //  ------------------------------------
  82          //      Variables Definitions
  83          //  ------------------------------------
  84            U8 bdata osdflage=0;
  85            sbit OSDPAGE2 = osdflage^0;
  86            sbit OSDPAGE3 = osdflage^1;
  87            sbit OSDPAGE4 = osdflage^2;
  88            sbit OSDPAGE5 = osdflage^3;
  89            U8 VlossCount;
  90            //bit VlossState;
  91          
  92            extern bit VlossFlag;
  93          
  94          #ifdef UTC
              U8 OSDLOCK=0;
              #endif
  97          
  98          //  ------------------------------------
  99          //      Function Prototypes
 100          //  ------------------------------------
 101          
 102          
 103          // ===========================================================================
 104          //                      Parallel function description
 105          // ===========================================================================
 106          //
 107          void PCT_InitialOSD(void)
 108          {
 109   1        data U8 page;
 110   1        //... OSD color index
 111   1        PCT_InitOSDColor();
 112   1        PCT_ClearGraphAttr();
 113   1      
 114   1        PCT_PreSetForegroundColor(OSD_COL_100WHT);
 115   1        PCT_PreSetBackgroundColor(OSD_COL_BLU);
 116   1        for(page=0; page<6; page++){
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 3   

 117   2          PCT_SetOSDDrawPage(page);
 118   2          PCT_FullColorOnOSD(0,0,90,38);      //... max line num is 310 line for OSD
 119   2        }
 120   1        PCT_EnShowOSDPage(WRPHX_PAGE1);
 121   1        PCT_PreSetBackgroundColor(OSD_COL_CLR);
 122   1        PCT_SetOSDDrawPage(WRPHY_PAGE0);
 123   1        PCT_FullColorOnOSD(0,0,90,38);        // ??
 124   1      
 125   1        SYSMODE=0;
 126   1      }
 127          
 128          // ===========================================================================
 129          //
 130          // PTH_X OSD Action
 131          //
 132          #define OSDBIT  BIT1
 133          void PCT_OSD_ActionPthX(PU8 _attr)
 134          {
 135   1        PCT_PreSetForegroundColor(OSD_COL_GRN);
 136   1        PCT_PreSetBackgroundColor(OSD_COL_CLR);
 137   1        switch(SYSMIXTYP) {
 138   2        #ifdef TW2835_FUNC_DEFINE  //Pinchi 20150324 add
 139   2          // ------------------------------------ NTSC ----------------------------------------
 140   2          case VMIX_TYPE_N11:
 141   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);
 142   2            break;
 143   2      
 144   2          case VMIX_TYPE_N21:
 145   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);//andy 980629
 146   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT1, camstr[SYSWINLK[1]]);//andy 980629
 147   2            break;
 148   2      
 149   2          case VMIX_TYPE_N22:
 150   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
 151   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
 152   2            break;
 153   2      
 154   2          case VMIX_TYPE_N31:
 155   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);
 156   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT1, camstr[SYSWINLK[1]]);
 157   2            _ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT1, camstr[SYSWINLK[2]]);
 158   2            break;
 159   2      
 160   2          case VMIX_TYPE_N32:
 161   2            break;
 162   2      
 163   2          case VMIX_TYPE_N33: // Turn LEFT
 164   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
 165   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
 166   2            _ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT1, camstr[SYSWINLK[2]]);
 167   2            break;
 168   2      
 169   2          case VMIX_TYPE_N34: // Turn RIGHT
 170   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
 171   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
 172   2            _ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT1, camstr[SYSWINLK[2]]);
 173   2            break;
 174   2      
 175   2          case VMIX_TYPE_N41: 
 176   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
 177   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
 178   2            _ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT1, camstr[SYSWINLK[2]]);
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 4   

 179   2            _ifBitSet(_attr[3],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT1, camstr[SYSWINLK[3]]);
 180   2            break;
 181   2      
 182   2          // ------------------------------------ PAL ----------------------------------------
 183   2          case VMIX_TYPE_P11: 
 184   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0_P, camstr[SYSWINLK[0]]);
 185   2            break;
 186   2      
 187   2          case VMIX_TYPE_P21: 
 188   2                  _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0_P, camstr[SYSWINLK[0]]);//andy 98
             -0629
 189   2                  _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT2, camstr[SYSWINLK[1]]);//andy 9806
             -29
 190   2            break;
 191   2      
 192   2          case VMIX_TYPE_P22: 
 193   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0_P, camstr[SYSWINLK[0]]);
 194   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0_P, camstr[SYSWINLK[1]]);
 195   2            break;
 196   2      
 197   2          case VMIX_TYPE_P31: 
 198   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0_P, camstr[SYSWINLK[0]]);
 199   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT2, camstr[SYSWINLK[1]]);
 200   2            _ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT2, camstr[SYSWINLK[2]]);
 201   2            break;
 202   2      
 203   2          case VMIX_TYPE_P32: 
 204   2            break;
 205   2      
 206   2          case VMIX_TYPE_P33: // Turn LEFT
 207   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0_P, camstr[SYSWINLK[0]]);
 208   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0_P, camstr[SYSWINLK[1]]);
 209   2            _ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT2, camstr[SYSWINLK[2]]);
 210   2            break;
 211   2      
 212   2          case VMIX_TYPE_P34: // Turn RIGHT
 213   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0_P, camstr[SYSWINLK[0]]);
 214   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0_P, camstr[SYSWINLK[1]]);
 215   2            _ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT2, camstr[SYSWINLK[2]]);
 216   2            break;
 217   2      
 218   2          case VMIX_TYPE_P41: 
 219   2            _ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0_P, camstr[SYSWINLK[0]]);
 220   2            _ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0_P, camstr[SYSWINLK[1]]);
 221   2            _ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT2, camstr[SYSWINLK[2]]);
 222   2            _ifBitSet(_attr[3],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT2, camstr[SYSWINLK[3]]);
 223   2            break;
 224   2        #else
                  // ------------------------------------ NTSC ----------------------------------------
                  case VMIX_TYPE_N11: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);
                    break;
              
                  case VMIX_TYPE_N21: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);//andy 980629
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT1, camstr[SYSWINLK[1]]);//andy 980629
                    break;
              
                  case VMIX_TYPE_N22: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
                    break;
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 5   

              
                  case VMIX_TYPE_N31: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT1, camstr[SYSWINLK[1]]);
                    ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT1, camstr[SYSWINLK[2]]);
                    break;
              
                  case VMIX_TYPE_N32: 
                    break;
              
                  case VMIX_TYPE_N33: // Turn LEFT
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
                    ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT1, camstr[SYSWINLK[2]]);
                    break;
              
                  case VMIX_TYPE_N34: // Turn RIGHT
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
                    ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT1, camstr[SYSWINLK[2]]);
                    break;
              
                  case VMIX_TYPE_N41: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0, camstr[SYSWINLK[1]]);
                    ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT1, camstr[SYSWINLK[2]]);
                    ifBitSet(_attr[3],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT1, camstr[SYSWINLK[3]]);
                    break;
              
                  // ------------------------------------ PAL ----------------------------------------
                  case VMIX_TYPE_P11: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0_P, camstr[SYSWINLK[0]]);
                    break;
              
                  case VMIX_TYPE_P21: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0_P, camstr[SYSWINLK[0]]);//andy 980629
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT2, camstr[SYSWINLK[1]]);//andy 980629
                    break;
              
                  case VMIX_TYPE_P22: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0_P, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0_P, camstr[SYSWINLK[1]]);
                    break;
              
                  case VMIX_TYPE_P31: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM1, LOCATE_YT0_P, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT2, camstr[SYSWINLK[1]]);
                    ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT2, camstr[SYSWINLK[2]]);
                    break;
              
                  case VMIX_TYPE_P32: 
                    break;
              
                  case VMIX_TYPE_P33: // Turn LEFT
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0_P, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0_P, camstr[SYSWINLK[1]]);
                    ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT2, camstr[SYSWINLK[2]]);
                    break;
              
                  case VMIX_TYPE_P34: // Turn RIGHT
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0_P, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0_P, camstr[SYSWINLK[1]]);
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 6   

                    ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT2, camstr[SYSWINLK[2]]);
                    break;
              
                  case VMIX_TYPE_P41: 
                    ifBitSet(_attr[0],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT0_P, camstr[SYSWINLK[0]]);
                    ifBitSet(_attr[1],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT0_P, camstr[SYSWINLK[1]]);
                    ifBitSet(_attr[2],OSDBIT) DrawString(LOCATE_XM0, LOCATE_YT2, camstr[SYSWINLK[2]]);
                    ifBitSet(_attr[3],OSDBIT) DrawString(LOCATE_XM2, LOCATE_YT2, camstr[SYSWINLK[3]]);
                    break;
                #endif
 311   2      
 312   2          default:
 313   2            break;
 314   2        }
 315   1      }
 316          
 317          // ===========================================================================
 318          //
 319          // Check Video Loss
 320          //
 321          void PCT_EnfalshVLoss(void)
 322          { 
 323   1        SYSVDOSGL |= BIT7;
 324   1      }
 325          
 326          // ===========================================================================
 327          //
 328          // Get Video Signal Status
 329          //
 330          void PCT_GetVideoSignalStatus(void)
 331          {
 332   1        #ifdef UTC
                static BYTE sign=0; 
                BYTE x;
                #endif
 336   1        MSGVDOSGL = ReadSignalSta(0x01, 0x78)&0x0F;
 337   1      
 338   1        if(SYSVDOSGL == MSGVDOSGL) return;        // Check Video Loss
 339   1        // --------------- Processing Show VLoss ---------------
 340   1           //William-V3.10-20100206>>>>>>>>>>>>>>>>NTSC PAL Detect when Video Loss
 341   1        VlossFlag=1;
 342   1        TW28_WriteByte(0x00,0x31,TW28_ReadByte(0x00,0x31)&0x7f);
 343   1        //<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
 344   1      #ifdef AWT_NO_SIGNAL_MSG  //Pinchi 20150323 add
 345   1      //  if (VlossFlag == 0)
 346   1        {
 347   2      //    VlossFlag=1;
 348   2        PCT_ShowVLoss();
 349   2        }
 350   1      #else
                #ifdef HS//don't dispaly vloss OSD
                #else
                PCT_PreSetForegroundColor(OSD_COL_RED255|OSD_BLINK);
                PCT_PreSetGraphAttr(OSD_BLINK);
                PCT_ShowVLoss();
                PCT_ClearGraphAttr();
                #endif
              #endif
 359   1        // -----------------------------------------------------
 360   1        SYSVDOSGL = MSGVDOSGL;
 361   1              
 362   1        #ifdef UTC
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 7   

              
                  if(((~MSGVDOSGL)&0x0f)==0)
                    ;
                  else  if(((((~MSGVDOSGL)&0x0f)^sign)!=0))
                  {
                    x=((~MSGVDOSGL)&0x0f)^sign;
                    x=(x&((~MSGVDOSGL)&0x0f));
                    
                    if((x&0x01)==0x01)  
                    {
                      RS_tx('U');
                      RS_tx('L');
                      RS_tx('K');
                    }
                    else if((x&0x02)==0x02)
                    {
                      RS_tx('U');
                      RS_tx('L');
                      RS_tx('K');
                    }
                    else if((x&0x04)==0x04)
                    {
                      RS_tx('U');
                      RS_tx('L');
                      RS_tx('K');
                    }
                    else if((x&0x08)==0x08)
                    {
                      RS_tx('U');
                      RS_tx('L');
                      RS_tx('K');
                    }
              
                  }
                
                sign=((~MSGVDOSGL)&0x0f);
                #endif
 400   1      
 401   1      }
 402          
 403          // ===========================================================================
 404          //
 405          // Show '<-' on OSD when Trun LEFT
 406          // Show '->' on OSD when Trun RIGHT
 407          //
 408          #define ILCT_X0 28
 409          #define ILCT_X1 49
 410          #define ILCT_X2 70
 411          #define ICONBIT 0x0C
 412          #define ICONSFT 2
 413          
 414          code unsigned char indicate_icon[] = {
 415            0x20,'\0',  //+ 0x20,'\0',
 416            0x0B,'\0',  //+ 0x02,'\0',
 417            0x0C,'\0',  //+ 0x03,'\0',
 418            0x0D,'\0',  //+ 0x04,'\0',
 419          };
 420          
 421          #if 1
 422          void PCT_ShowIndicateIcon(PU8 _attr)
 423          {
 424   1        data U8 iconid;
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 8   

 425   1      //  printf("Command Shell for HiSharp Set S or J Mode");
 426   1        
 427   1        PCT_PreSetForegroundColor(OSD_COL_RED+OSD_BLINK);
 428   1        switch(SYSMIXTYP) {
 429   2          // ------------------------------------ NTSC & PAL ----------------------------------------
 430   2          case VMIX_TYPE_N11: 
 431   2          case VMIX_TYPE_P11: 
 432   2            iconid = (_attr[0]&ICONBIT) >> ICONSFT;
 433   2      
 434   2            if(iconid) {
 435   3              PCT_ClearWordsPathX(0, SYSTYPE, 2);
 436   3              DrawString(ILCT_X1, SYSTYPE, &indicate_icon[iconid<<1]);
 437   3            } 
 438   2            else {
 439   3              PCT_ClearWordsPathX(ILCT_X1, SYSTYPE, 1);
 440   3            #ifdef AWT_DRAW_T_ICON  //Pinchi 20150415 add to draw T icon when CAM C trigger
 441   3              if (_attr[0] & 0x20)
 442   3              {
 443   4                PCT_ClearWordsPathX(0, SYSTYPE, 2); //Pinchi 20150422 add
 444   4                DrawString(1, SYSTYPE, &indicate_icon[0]);
 445   4              }
 446   3              else
 447   3              {
 448   4                if (SYSMODE == 0) //Pinchi 20150422 add
 449   4                  PCT_ClearWordsPathX(1, SYSTYPE, 1);
 450   4              }
 451   3            #endif
 452   3            }
 453   2            break;
 454   2      
 455   2          case VMIX_TYPE_N21: 
 456   2          case VMIX_TYPE_P21: ////////////////////////////andy-980604
 457   2            // ---------- LEFT Windows ----------
 458   2            iconid = (_attr[0]&ICONBIT) >> ICONSFT;
 459   2      
 460   2            if(iconid) {
 461   3              PCT_ClearWordsPathX(0, SYSTYPE, 2);
 462   3              DrawString(ILCT_X0, SYSTYPE, &indicate_icon[iconid<<1]);
 463   3            }
 464   2            else {
 465   3              PCT_ClearWordsPathX(ILCT_X0, SYSTYPE, 1);     
 466   3            #ifdef AWT_DRAW_T_ICON  //Pinchi 20150415 add to draw T icon when CAM C trigger
 467   3              if (_attr[0] & 0x20)
 468   3              {
 469   4                PCT_ClearWordsPathX(0, SYSTYPE, 2); //Pinchi 20150422 add
 470   4                DrawString(1, SYSTYPE, &indicate_icon[0]);
 471   4              }
 472   3              else
 473   3              {
 474   4                if (SYSMODE == 0) //Pinchi 20150422 add
 475   4                  PCT_ClearWordsPathX(1, SYSTYPE, 1);
 476   4              }
 477   3            #endif
 478   3            }
 479   2      
 480   2            // ---------- RIGHT Windows ----------
 481   2            iconid = (_attr[1]&ICONBIT) >> ICONSFT;
 482   2            if(iconid) {
 483   3              PCT_ClearWordsPathX(0, SYSTYPE, 2);
 484   3              DrawString(ILCT_X2, SYSTYPE, &indicate_icon[iconid<<1]);
 485   3            }
 486   2            else {
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 9   

 487   3              PCT_ClearWordsPathX(ILCT_X2, SYSTYPE, 1);
 488   3            }
 489   2            break;
 490   2      
 491   2          case VMIX_TYPE_N22: 
 492   2          case VMIX_TYPE_P22: 
 493   2            // ---------- LEFT Windows ----------
 494   2            iconid = (_attr[0]&ICONBIT) >> ICONSFT;
 495   2      
 496   2            if(iconid) {
 497   3              PCT_ClearWordsPathX(0, SYSTYPE, 2);
 498   3              DrawString(ILCT_X0, SYSTYPE, &indicate_icon[iconid<<1]);
 499   3            }
 500   2            else {
 501   3              PCT_ClearWordsPathX(ILCT_X0, SYSTYPE, 1);
 502   3            #ifdef AWT_DRAW_T_ICON  //Pinchi 20150415 add to draw T icon when CAM C trigger
 503   3              if (_attr[0] & 0x20)
 504   3              {
 505   4                PCT_ClearWordsPathX(0, SYSTYPE, 2); //Pinchi 20150422 add
 506   4                DrawString(1, SYSTYPE, &indicate_icon[0]);
 507   4              }
 508   3              else
 509   3              {
 510   4                if (SYSMODE == 0) //Pinchi 20150422 add
 511   4                  PCT_ClearWordsPathX(1, SYSTYPE, 1);
 512   4              }
 513   3            #endif
 514   3            }
 515   2      
 516   2            // ---------- RIGHT Windows ----------
 517   2            iconid = (_attr[1]&ICONBIT) >> ICONSFT;
 518   2            if(iconid) {
 519   3              PCT_ClearWordsPathX(0, LOCATE_YT0, 2);
 520   3              DrawString(ILCT_X2, SYSTYPE, &indicate_icon[iconid<<1]);
 521   3            }
 522   2            else {
 523   3              PCT_ClearWordsPathX(ILCT_X2, SYSTYPE, 1);
 524   3            }
 525   2            break;
 526   2      
 527   2          case VMIX_TYPE_N31: // Trun Back
 528   2          case VMIX_TYPE_P31: // Trun Back
 529   2            // ---------- Trun Back Window Show "|" ----------
 530   2            iconid = (_attr[0]&ICONBIT) >> ICONSFT;
 531   2      
 532   2            if(iconid) {
 533   3              PCT_ClearWordsPathX(0, SYSTYPE, 2);
 534   3              DrawString(ILCT_X1, SYSTYPE, &indicate_icon[iconid<<1]);
 535   3            }
 536   2            else {
 537   3              PCT_ClearWordsPathX(ILCT_X1, SYSTYPE, 1);
 538   3            #ifdef AWT_DRAW_T_ICON  //Pinchi 20150415 add to draw T icon when CAM C trigger
 539   3              if (_attr[0] & 0x20)
 540   3              {
 541   4                PCT_ClearWordsPathX(0, SYSTYPE, 2); //Pinchi 20150422 add
 542   4                DrawString(1, SYSTYPE, &indicate_icon[0]);
 543   4              }
 544   3              else
 545   3              {
 546   4                if (SYSMODE == 0) //Pinchi 20150422 add
 547   4                  PCT_ClearWordsPathX(1, SYSTYPE, 1);
 548   4              }
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 10  

 549   3            #endif
 550   3            }
 551   2            break;
 552   2      
 553   2          case VMIX_TYPE_N32: 
 554   2          case VMIX_TYPE_P32: 
 555   2            break;
 556   2      
 557   2          case VMIX_TYPE_N33: // Trun LEFT
 558   2          case VMIX_TYPE_P33: // Trun LEFT
 559   2            // ---------- Show "<-" ----------
 560   2            iconid = (_attr[0]&ICONBIT) >> ICONSFT;
 561   2      
 562   2            if(iconid) {
 563   3              PCT_ClearWordsPathX(0, SYSTYPE, 2);
 564   3              DrawString(ILCT_X0, SYSTYPE, &indicate_icon[iconid<<1]);
 565   3            }
 566   2            else {
 567   3              PCT_ClearWordsPathX(ILCT_X0, SYSTYPE, 1);
 568   3            #ifdef AWT_DRAW_T_ICON  //Pinchi 20150415 add to draw T icon when CAM C trigger
 569   3              if (_attr[0] & 0x20)
 570   3              {
 571   4                PCT_ClearWordsPathX(0, SYSTYPE, 2); //Pinchi 20150422 add
 572   4                DrawString(1, SYSTYPE, &indicate_icon[0]);
 573   4              }
 574   3              else
 575   3              {
 576   4                if (SYSMODE == 0) //Pinchi 20150422 add
 577   4                  PCT_ClearWordsPathX(1, SYSTYPE, 1);
 578   4              }
 579   3            #endif
 580   3            }
 581   2            break;
 582   2      
 583   2          case VMIX_TYPE_N34: // Trun RIGHT
 584   2          case VMIX_TYPE_P34: // Trun RIGHT
 585   2            // ---------- Show "->" ----------
 586   2            iconid = (_attr[1]&ICONBIT) >> ICONSFT;
 587   2      
 588   2            if(iconid) {
 589   3              PCT_ClearWordsPathX(0, SYSTYPE, 2);
 590   3              DrawString(ILCT_X2, SYSTYPE, &indicate_icon[iconid<<1]);
 591   3            }
 592   2            else {
 593   3              PCT_ClearWordsPathX(ILCT_X2, SYSTYPE, 1);
 594   3            #ifdef AWT_DRAW_T_ICON  //Pinchi 20150415 add to draw T icon when CAM C trigger
 595   3              if (_attr[0] & 0x20)
 596   3              {
 597   4                PCT_ClearWordsPathX(0, SYSTYPE, 2); //Pinchi 20150422 add
 598   4                DrawString(1, SYSTYPE, &indicate_icon[0]);
 599   4              }
 600   3              else
 601   3              {
 602   4                if (SYSMODE == 0) //Pinchi 20150422 add
 603   4                  PCT_ClearWordsPathX(1, SYSTYPE, 1);
 604   4              }
 605   3            #endif
 606   3            }
 607   2            break;
 608   2      
 609   2          case VMIX_TYPE_N41: 
 610   2          case VMIX_TYPE_P41: 
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 11  

 611   2            break;
 612   2      
 613   2          default:  
 614   2            break;
 615   2        }
 616   1      }
 617          #else
              void PCT_ShowIndicateIcon(PU8 _attr)
              {
                data U8 iconid;
              //  printf("Command Shell for HiSharp Set S or J Mode");
                
                PCT_PreSetForegroundColor(OSD_COL_RED+OSD_BLINK);
                switch(SYSMIXTYP) {
                  // ------------------------------------ NTSC & PAL ----------------------------------------
                  case VMIX_TYPE_N11: 
                  case VMIX_TYPE_P11: 
                    iconid = (_attr[0]&ICONBIT) >> ICONSFT;
              
                    if(iconid) {
                      PCT_ClearWordsPathX(0, LOCATE_YT0, 2);
                      DrawString(ILCT_X1, LOCATE_YT0, &indicate_icon[iconid<<1]);
                    } 
                    else {
                      PCT_ClearWordsPathX(ILCT_X1, LOCATE_YT0, 1);
                    #ifdef AWT_DRAW_T_ICON  //Pinchi 20150415 add to draw T icon when CAM C trigger
                      if (_attr[0] & 0x20)
                      {
                        PCT_ClearWordsPathX(0, LOCATE_YT0, 2);  //Pinchi 20150422 add
                        DrawString(1, LOCATE_YT0, &indicate_icon[0]);
                      }
                      else
                      {
                        if (SYSMODE == 0) //Pinchi 20150422 add
                          PCT_ClearWordsPathX(1, LOCATE_YT0, 1);
                      }
                    #endif
                    }
                    break;
              
                  case VMIX_TYPE_N21: 
                  case VMIX_TYPE_P21: ////////////////////////////andy-980604
                    // ---------- LEFT Windows ----------
                    iconid = (_attr[0]&ICONBIT) >> ICONSFT;
              
                    if(iconid) {
                      PCT_ClearWordsPathX(0, LOCATE_YT0, 2);
                      DrawString(ILCT_X0, LOCATE_YT0, &indicate_icon[iconid<<1]);
                    }
                    else {
                      PCT_ClearWordsPathX(ILCT_X0, LOCATE_YT0, 1);      
                    #ifdef AWT_DRAW_T_ICON  //Pinchi 20150415 add to draw T icon when CAM C trigger
                      if (_attr[0] & 0x20)
                      {
                        PCT_ClearWordsPathX(0, LOCATE_YT0, 2);  //Pinchi 20150422 add
                        DrawString(1, LOCATE_YT0, &indicate_icon[0]);
                      }
                      else
                      {
                        if (SYSMODE == 0) //Pinchi 20150422 add
                          PCT_ClearWordsPathX(1, LOCATE_YT0, 1);
                      }
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 12  

                    #endif
                    }
              
                    // ---------- RIGHT Windows ----------
                    iconid = (_attr[1]&ICONBIT) >> ICONSFT;
                    if(iconid) {
                      PCT_ClearWordsPathX(0, LOCATE_YT0, 2);
                      DrawString(ILCT_X2, LOCATE_YT0, &indicate_icon[iconid<<1]);
                    }
                    else {
                      PCT_ClearWordsPathX(ILCT_X2, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N22: 
                  case VMIX_TYPE_P22: 
                    // ---------- LEFT Windows ----------
                    iconid = (_attr[0]&ICONBIT) >> ICONSFT;
              
                    if(iconid) {
                      PCT_ClearWordsPathX(0, LOCATE_YT0, 2);
                      DrawString(ILCT_X0, LOCATE_YT0, &indicate_icon[iconid<<1]);
                    }
                    else {
                      PCT_ClearWordsPathX(ILCT_X0, LOCATE_YT0, 1);
                    #ifdef AWT_DRAW_T_ICON  //Pinchi 20150415 add to draw T icon when CAM C trigger
                      if (_attr[0] & 0x20)
                      {
                        PCT_ClearWordsPathX(0, LOCATE_YT0, 2);  //Pinchi 20150422 add
                        DrawString(1, LOCATE_YT0, &indicate_icon[0]);
                      }
                      else
                      {
                        if (SYSMODE == 0) //Pinchi 20150422 add
                          PCT_ClearWordsPathX(1, LOCATE_YT0, 1);
                      }
                    #endif
                    }
              
                    // ---------- RIGHT Windows ----------
                    iconid = (_attr[1]&ICONBIT) >> ICONSFT;
                    if(iconid) {
                      PCT_ClearWordsPathX(0, LOCATE_YT0, 2);
                      DrawString(ILCT_X2, LOCATE_YT0, &indicate_icon[iconid<<1]);
                    }
                    else {
                      PCT_ClearWordsPathX(ILCT_X2, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N31: // Trun Back
                  case VMIX_TYPE_P31: // Trun Back
                    // ---------- Trun Back Window Show "|" ----------
                    iconid = (_attr[0]&ICONBIT) >> ICONSFT;
              
                    if(iconid) {
                      PCT_ClearWordsPathX(0, LOCATE_YT0, 2);
                      DrawString(ILCT_X1, LOCATE_YT0, &indicate_icon[iconid<<1]);
                    }
                    else {
                      PCT_ClearWordsPathX(ILCT_X1, LOCATE_YT0, 1);
                    #ifdef AWT_DRAW_T_ICON  //Pinchi 20150415 add to draw T icon when CAM C trigger
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 13  

                      if (_attr[0] & 0x20)
                      {
                        PCT_ClearWordsPathX(0, LOCATE_YT0, 2);  //Pinchi 20150422 add
                        DrawString(1, LOCATE_YT0, &indicate_icon[0]);
                      }
                      else
                      {
                        if (SYSMODE == 0) //Pinchi 20150422 add
                          PCT_ClearWordsPathX(1, LOCATE_YT0, 1);
                      }
                    #endif
                    }
                    break;
              
                  case VMIX_TYPE_N32: 
                  case VMIX_TYPE_P32: 
                    break;
              
                  case VMIX_TYPE_N33: // Trun LEFT
                  case VMIX_TYPE_P33: // Trun LEFT
                    // ---------- Show "<-" ----------
                    iconid = (_attr[0]&ICONBIT) >> ICONSFT;
              
                    if(iconid) {
                      PCT_ClearWordsPathX(0, LOCATE_YT0, 2);
                      DrawString(ILCT_X0, LOCATE_YT0, &indicate_icon[iconid<<1]);
                    }
                    else {
                      PCT_ClearWordsPathX(ILCT_X0, LOCATE_YT0, 1);
                    #ifdef AWT_DRAW_T_ICON  //Pinchi 20150415 add to draw T icon when CAM C trigger
                      if (_attr[0] & 0x20)
                      {
                        PCT_ClearWordsPathX(0, LOCATE_YT0, 2);  //Pinchi 20150422 add
                        DrawString(1, LOCATE_YT0, &indicate_icon[0]);
                      }
                      else
                      {
                        if (SYSMODE == 0) //Pinchi 20150422 add
                          PCT_ClearWordsPathX(1, LOCATE_YT0, 1);
                      }
                    #endif
                    }
                    break;
              
                  case VMIX_TYPE_N34: // Trun RIGHT
                  case VMIX_TYPE_P34: // Trun RIGHT
                    // ---------- Show "->" ----------
                    iconid = (_attr[1]&ICONBIT) >> ICONSFT;
              
                    if(iconid) {
                      PCT_ClearWordsPathX(0, LOCATE_YT0, 2);
                      DrawString(ILCT_X2, LOCATE_YT0, &indicate_icon[iconid<<1]);
                    }
                    else {
                      PCT_ClearWordsPathX(ILCT_X2, LOCATE_YT0, 1);
                    #ifdef AWT_DRAW_T_ICON  //Pinchi 20150415 add to draw T icon when CAM C trigger
                      if (_attr[0] & 0x20)
                      {
                        PCT_ClearWordsPathX(0, LOCATE_YT0, 2);  //Pinchi 20150422 add
                        DrawString(1, LOCATE_YT0, &indicate_icon[0]);
                      }
                      else
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 14  

                      {
                        if (SYSMODE == 0) //Pinchi 20150422 add
                          PCT_ClearWordsPathX(1, LOCATE_YT0, 1);
                      }
                    #endif
                    }
                    break;
              
                  case VMIX_TYPE_N41: 
                  case VMIX_TYPE_P41: 
                    break;
              
                  default:  
                    break;
                }
              }
              #endif
 814          // ===========================================================================
 815          //
 816          // Show 'M'  on OSD when Video Mirror
 817          //
 818          #define MLCT_X0 23
 819          #define MLCT_X1 44
 820          #define MLCT_X2 65
 821          #define MIRROR  camstr[4]
 822          
 823          #if 1//for holger
 824          
 825          void PCT_ShowMirrorIcon(PU8 _attr)
 826          {
 827   1        PCT_PreSetForegroundColor(OSD_COL_YLW);
 828   1        switch(SYSMIXTYP) {
 829   2        #ifdef TW2835_FUNC_DEFINE  //Pinchi 20150324 add
 830   2          // ------------------------------------ NTSC ----------------------------------------
 831   2          case VMIX_TYPE_N11: 
 832   2            // ---------- Window Show "M" ----------
 833   2            _ifBitSet(_attr[0],BIT0) {
 834   3              DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
 835   3            } else {
 836   3              PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
 837   3            }
 838   2            break;
 839   2      
 840   2          case VMIX_TYPE_N21: 
 841   2                  // ----------UP Window Show "M" ----------
 842   2            _ifBitSet(_attr[0],BIT0) {
 843   3              DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
 844   3            } else {
 845   3              PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
 846   3            }
 847   2                  // ----------DOWN Window Show "M" ----------
 848   2            _ifBitSet(_attr[1],BIT0) {
 849   3              DrawString(MLCT_X1, LOCATE_YT1, MIRROR);
 850   3            } else {
 851   3              PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT1, 1);
 852   3            } 
 853   2            break;
 854   2      
 855   2          case VMIX_TYPE_N22: 
 856   2            // ---------- LEFT Window Show "M" ----------
 857   2            _ifBitSet(_attr[0],BIT0) {
 858   3              DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 15  

 859   3            } else {
 860   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
 861   3            }
 862   2      
 863   2            // ---------- RIGHT Window Show "M" ----------
 864   2            _ifBitSet(_attr[1],BIT0) {
 865   3              DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
 866   3            } else {
 867   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
 868   3            }
 869   2      
 870   2            break;
 871   2      
 872   2          case VMIX_TYPE_N31: // Trun Back
 873   2            // ---------- TOP Window Show "M" ----------
 874   2            _ifBitSet(_attr[0],BIT0) {
 875   3              DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
 876   3            } else {
 877   3              PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
 878   3            }
 879   2      
 880   2            // ---------- LEFT Window Show "M" ----------
 881   2            _ifBitSet(_attr[1],BIT0) {
 882   3              DrawString(MLCT_X0, LOCATE_YT1, MIRROR);
 883   3            } else {
 884   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT1, 1);
 885   3            }
 886   2      
 887   2            // ---------- RIGHT Window Show "M" ----------
 888   2            _ifBitSet(_attr[2],BIT0) {
 889   3              DrawString(MLCT_X2, LOCATE_YT1, MIRROR);
 890   3            } else {
 891   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT1, 1);
 892   3            }
 893   2            break;
 894   2      
 895   2          case VMIX_TYPE_N32: 
 896   2            break;
 897   2      
 898   2          case VMIX_TYPE_N33: // Trun LEFT
 899   2            // ---------- LEFT Window Show "M" ----------
 900   2            _ifBitSet(_attr[0],BIT0) {
 901   3              DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
 902   3            } else {
 903   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
 904   3            }
 905   2      
 906   2            // ---------- RIGHT_TOP Window Show "M" ----------
 907   2            _ifBitSet(_attr[1],BIT0) {
 908   3              DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
 909   3            } else {
 910   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
 911   3            }
 912   2      
 913   2            // ---------- RIGHT_DOWN Window Show "M" ----------
 914   2            _ifBitSet(_attr[2],BIT0) {
 915   3              DrawString(MLCT_X2, LOCATE_YT1, MIRROR);
 916   3            } else {
 917   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT1, 1);
 918   3            }
 919   2            break;
 920   2      
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 16  

 921   2          case VMIX_TYPE_N34: // Trun RIGHT
 922   2            // ---------- LEFT_TOP Window Show "M" ----------
 923   2            _ifBitSet(_attr[0],BIT0) {
 924   3              DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
 925   3            } else {
 926   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
 927   3            }
 928   2      
 929   2            // ---------- RIGHT Window Show "M" ----------
 930   2            _ifBitSet(_attr[1],BIT0) {
 931   3              DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
 932   3            } else {
 933   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
 934   3            }
 935   2      
 936   2            // ---------- LEFT_DOWN Window Show "M" ----------
 937   2            _ifBitSet(_attr[2],BIT0) {
 938   3              DrawString(MLCT_X0, LOCATE_YT1, MIRROR);
 939   3            } else {
 940   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT1, 1);
 941   3            }
 942   2            break;
 943   2      
 944   2          case VMIX_TYPE_N41: 
 945   2            // ---------- LEFT_TOP Window Show "M" ----------
 946   2            _ifBitSet(_attr[0],BIT0) {
 947   3              DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
 948   3            } else {
 949   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
 950   3            }
 951   2      
 952   2            // ---------- RIGHT_TOP Window Show "M" ----------
 953   2            _ifBitSet(_attr[1],BIT0) {
 954   3              DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
 955   3            } else {
 956   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
 957   3            }
 958   2      
 959   2            // ---------- LEFT_DOWN Window Show "M" ----------
 960   2            _ifBitSet(_attr[2],BIT0) {
 961   3              DrawString(MLCT_X0, LOCATE_YT1, MIRROR);
 962   3            } else {
 963   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT1, 1);
 964   3            }
 965   2      
 966   2            // ---------- RIGHT_DOWN Window Show "M" ----------
 967   2            _ifBitSet(_attr[3],BIT0) {
 968   3              DrawString(MLCT_X2, LOCATE_YT1, MIRROR);
 969   3            } else {
 970   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT1, 1);
 971   3            }
 972   2            break;
 973   2      
 974   2          // ------------------------------------ PAL ----------------------------------------
 975   2          case VMIX_TYPE_P11: 
 976   2            // ---------- Window Show "M" ----------
 977   2            _ifBitSet(_attr[0],BIT0) {
 978   3              DrawString(MLCT_X1, SYSTYPE, MIRROR);
 979   3            } else {
 980   3              PCT_ClearWordsPathX(MLCT_X1, SYSTYPE, 1);
 981   3            }
 982   2            break;
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 17  

 983   2      
 984   2          case VMIX_TYPE_P21: 
 985   2                   // ----------UP Window Show "M" ----------
 986   2            _ifBitSet(_attr[0],BIT0) {
 987   3              DrawString(MLCT_X1, SYSTYPE, MIRROR);
 988   3            } else {
 989   3              PCT_ClearWordsPathX(MLCT_X1, SYSTYPE, 1);
 990   3            }
 991   2                  // ----------DOWN Window Show "M" ----------
 992   2            _ifBitSet(_attr[1],BIT0) {
 993   3              DrawString(MLCT_X1, LOCATE_YT1, MIRROR);
 994   3            } else {
 995   3              PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT1, 1);
 996   3            }
 997   2            break;
 998   2      
 999   2          case VMIX_TYPE_P22: 
1000   2            // ---------- LEFT Window Show "M" ----------
1001   2            _ifBitSet(_attr[0],BIT0) {
1002   3              DrawString(MLCT_X0, SYSTYPE, MIRROR);
1003   3            } else {
1004   3              PCT_ClearWordsPathX(MLCT_X0, SYSTYPE, 1);
1005   3            }
1006   2      
1007   2            // ---------- RIGHT Window Show "M" ----------
1008   2            _ifBitSet(_attr[1],BIT0) {
1009   3              DrawString(MLCT_X2, SYSTYPE, MIRROR);
1010   3            } else {
1011   3              PCT_ClearWordsPathX(MLCT_X2, SYSTYPE, 1);
1012   3            }
1013   2      
1014   2            break;
1015   2      
1016   2          case VMIX_TYPE_P31: // Trun Back
1017   2            // ---------- TOP Window Show "M" ----------
1018   2            _ifBitSet(_attr[0],BIT0) {
1019   3              DrawString(MLCT_X1, SYSTYPE, MIRROR);
1020   3            } else {
1021   3              PCT_ClearWordsPathX(MLCT_X1, SYSTYPE, 1);
1022   3            }
1023   2      
1024   2            // ---------- LEFT Window Show "M" ----------
1025   2            _ifBitSet(_attr[1],BIT0) {
1026   3              DrawString(MLCT_X0, LOCATE_YT2, MIRROR);
1027   3            } else {
1028   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT2, 1);
1029   3            }
1030   2      
1031   2            // ---------- RIGHT Window Show "M" ----------
1032   2            _ifBitSet(_attr[2],BIT0) {
1033   3              DrawString(MLCT_X2, LOCATE_YT2, MIRROR);
1034   3            } else {
1035   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT2, 1);
1036   3            }
1037   2            break;
1038   2      
1039   2          case VMIX_TYPE_P32: 
1040   2            break;
1041   2      
1042   2          case VMIX_TYPE_P33: // Trun LEFT
1043   2            // ---------- LEFT Window Show "M" ----------
1044   2            _ifBitSet(_attr[0],BIT0) {
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 18  

1045   3              DrawString(MLCT_X0, SYSTYPE, MIRROR);
1046   3            } else {
1047   3              PCT_ClearWordsPathX(MLCT_X0, SYSTYPE, 1);
1048   3            }
1049   2      
1050   2            // ---------- RIGHT_TOP Window Show "M" ----------
1051   2            _ifBitSet(_attr[1],BIT0) {
1052   3              DrawString(MLCT_X2, SYSTYPE, MIRROR);
1053   3            } else {
1054   3              PCT_ClearWordsPathX(MLCT_X2, SYSTYPE, 1);
1055   3            }
1056   2      
1057   2            // ---------- RIGHT_DOWN Window Show "M" ----------
1058   2            _ifBitSet(_attr[2],BIT0) {
1059   3              DrawString(MLCT_X2, LOCATE_YT2, MIRROR);
1060   3            } else {
1061   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT2, 1);
1062   3            }
1063   2            break;
1064   2      
1065   2          case VMIX_TYPE_P34: // Trun RIGHT
1066   2            // ---------- LEFT_TOP Window Show "M" ----------
1067   2            _ifBitSet(_attr[0],BIT0) {
1068   3              DrawString(MLCT_X0, SYSTYPE, MIRROR);
1069   3            } else {
1070   3              PCT_ClearWordsPathX(MLCT_X0, SYSTYPE, 1);
1071   3            }
1072   2      
1073   2            // ---------- RIGHT Window Show "M" ----------
1074   2            _ifBitSet(_attr[1],BIT0) {
1075   3              DrawString(MLCT_X2, SYSTYPE, MIRROR);
1076   3            } else {
1077   3              PCT_ClearWordsPathX(MLCT_X2, SYSTYPE, 1);
1078   3            }
1079   2      
1080   2            // ---------- LEFT_DOWN Window Show "M" ----------
1081   2            _ifBitSet(_attr[2],BIT0) {
1082   3              DrawString(MLCT_X0, LOCATE_YT2, MIRROR);
1083   3            } else {
1084   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT2, 1);
1085   3            }
1086   2            break;
1087   2      
1088   2          case VMIX_TYPE_P41: 
1089   2            // ---------- LEFT_TOP Window Show "M" ----------
1090   2            _ifBitSet(_attr[0],BIT0) {
1091   3              DrawString(MLCT_X0, SYSTYPE, MIRROR);
1092   3            } else {
1093   3              PCT_ClearWordsPathX(MLCT_X0, SYSTYPE, 1);
1094   3            }
1095   2      
1096   2            // ---------- RIGHT_TOP Window Show "M" ----------
1097   2            _ifBitSet(_attr[1],BIT0) {
1098   3              DrawString(MLCT_X2, SYSTYPE, MIRROR);
1099   3            } else {
1100   3              PCT_ClearWordsPathX(MLCT_X2, SYSTYPE, 1);
1101   3            }
1102   2      
1103   2            // ---------- LEFT_DOWN Window Show "M" ----------
1104   2            _ifBitSet(_attr[2],BIT0) {
1105   3              DrawString(MLCT_X0, LOCATE_YT2, MIRROR);
1106   3            } else {
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 19  

1107   3              PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT2, 1);
1108   3            }
1109   2      
1110   2            // ---------- RIGHT_DOWN Window Show "M" ----------
1111   2            _ifBitSet(_attr[3],BIT0) {
1112   3              DrawString(MLCT_X2, LOCATE_YT2, MIRROR);
1113   3            } else {
1114   3              PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT2, 1);
1115   3            }
1116   2            break;
1117   2        #else
                  // ------------------------------------ NTSC ----------------------------------------
                  case VMIX_TYPE_N11: 
                    // ---------- Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N21: 
                          // ----------UP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
                          // ----------DOWN Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT1, 1);
                    } 
                    break;
              
                  case VMIX_TYPE_N22: 
                    // ---------- LEFT Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    break;
              
                  case VMIX_TYPE_N31: // Trun Back
                    // ---------- TOP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
              
                    // ---------- LEFT Window Show "M" ----------
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 20  

                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT1, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N32: 
                    break;
              
                  case VMIX_TYPE_N33: // Trun LEFT
                    // ---------- LEFT Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_TOP Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N34: // Trun RIGHT
                    // ---------- LEFT_TOP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- LEFT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT1, 1);
                    }
                    break;
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 21  

              
                  case VMIX_TYPE_N41: 
                    // ---------- LEFT_TOP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_TOP Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- LEFT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT1, 1);
                    }
              
                    // ---------- RIGHT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[3],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  // ------------------------------------ PAL ----------------------------------------
                  case VMIX_TYPE_P11: 
                    // ---------- Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, SYSTYPE, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, SYSTYPE, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P21: 
                           // ----------UP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, SYSTYPE, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, SYSTYPE, 1);
                    }
                          // ----------DOWN Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P22: 
                    // ---------- LEFT Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, SYSTYPE, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, SYSTYPE, 1);
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 22  

                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, SYSTYPE, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, SYSTYPE, 1);
                    }
              
                    break;
              
                  case VMIX_TYPE_P31: // Trun Back
                    // ---------- TOP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, SYSTYPE, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, SYSTYPE, 1);
                    }
              
                    // ---------- LEFT Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT2, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P32: 
                    break;
              
                  case VMIX_TYPE_P33: // Trun LEFT
                    // ---------- LEFT Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, SYSTYPE, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, SYSTYPE, 1);
                    }
              
                    // ---------- RIGHT_TOP Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, SYSTYPE, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, SYSTYPE, 1);
                    }
              
                    // ---------- RIGHT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P34: // Trun RIGHT
                    // ---------- LEFT_TOP Window Show "M" ----------
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 23  

                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, SYSTYPE, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, SYSTYPE, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, SYSTYPE, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, SYSTYPE, 1);
                    }
              
                    // ---------- LEFT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P41: 
                    // ---------- LEFT_TOP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, SYSTYPE, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, SYSTYPE, 1);
                    }
              
                    // ---------- RIGHT_TOP Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, SYSTYPE, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, SYSTYPE, 1);
                    }
              
                    // ---------- LEFT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT2, 1);
                    }
              
                    // ---------- RIGHT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[3],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
                #endif
1406   2      
1407   2          default:
1408   2            break;
1409   2        }
1410   1      }
1411          #else
              void PCT_ShowMirrorIcon(PU8 _attr)
              {
                PCT_PreSetForegroundColor(OSD_COL_YLW);
                switch(SYSMIXTYP) {
                #ifdef TW2835_FUNC_DEFINE  //Pinchi 20150324 add
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 24  

                  // ------------------------------------ NTSC ----------------------------------------
                  case VMIX_TYPE_N11: 
                    // ---------- Window Show "M" ----------
                    _ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N21: 
                          // ----------UP Window Show "M" ----------
                    _ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
                          // ----------DOWN Window Show "M" ----------
                    _ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT1, 1);
                    } 
                    break;
              
                  case VMIX_TYPE_N22: 
                    // ---------- LEFT Window Show "M" ----------
                    _ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    _ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    break;
              
                  case VMIX_TYPE_N31: // Trun Back
                    // ---------- TOP Window Show "M" ----------
                    _ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
              
                    // ---------- LEFT Window Show "M" ----------
                    _ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT1, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    _ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT1, 1);
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 25  

                    }
                    break;
              
                  case VMIX_TYPE_N32: 
                    break;
              
                  case VMIX_TYPE_N33: // Trun LEFT
                    // ---------- LEFT Window Show "M" ----------
                    _ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_TOP Window Show "M" ----------
                    _ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_DOWN Window Show "M" ----------
                    _ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N34: // Trun RIGHT
                    // ---------- LEFT_TOP Window Show "M" ----------
                    _ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    _ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- LEFT_DOWN Window Show "M" ----------
                    _ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N41: 
                    // ---------- LEFT_TOP Window Show "M" ----------
                    _ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_TOP Window Show "M" ----------
                    _ifBitSet(_attr[1],BIT0) {
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 26  

                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- LEFT_DOWN Window Show "M" ----------
                    _ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT1, 1);
                    }
              
                    // ---------- RIGHT_DOWN Window Show "M" ----------
                    _ifBitSet(_attr[3],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  // ------------------------------------ PAL ----------------------------------------
                  case VMIX_TYPE_P11: 
                    // ---------- Window Show "M" ----------
                    _ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P21: 
                           // ----------UP Window Show "M" ----------
                    _ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
                          // ----------DOWN Window Show "M" ----------
                    _ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P22: 
                    // ---------- LEFT Window Show "M" ----------
                    _ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    _ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    break;
              
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 27  

                  case VMIX_TYPE_P31: // Trun Back
                    // ---------- TOP Window Show "M" ----------
                    _ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
              
                    // ---------- LEFT Window Show "M" ----------
                    _ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT2, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    _ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P32: 
                    break;
              
                  case VMIX_TYPE_P33: // Trun LEFT
                    // ---------- LEFT Window Show "M" ----------
                    _ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_TOP Window Show "M" ----------
                    _ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_DOWN Window Show "M" ----------
                    _ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P34: // Trun RIGHT
                    // ---------- LEFT_TOP Window Show "M" ----------
                    _ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    _ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 28  

                    }
              
                    // ---------- LEFT_DOWN Window Show "M" ----------
                    _ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P41: 
                    // ---------- LEFT_TOP Window Show "M" ----------
                    _ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_TOP Window Show "M" ----------
                    _ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- LEFT_DOWN Window Show "M" ----------
                    _ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT2, 1);
                    }
              
                    // ---------- RIGHT_DOWN Window Show "M" ----------
                    _ifBitSet(_attr[3],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
                #else
                  // ------------------------------------ NTSC ----------------------------------------
                  case VMIX_TYPE_N11: 
                    // ---------- Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N21: 
                          // ----------UP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
                          // ----------DOWN Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT1, 1);
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 29  

                    } 
                    break;
              
                  case VMIX_TYPE_N22: 
                    // ---------- LEFT Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    break;
              
                  case VMIX_TYPE_N31: // Trun Back
                    // ---------- TOP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
              
                    // ---------- LEFT Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT1, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N32: 
                    break;
              
                  case VMIX_TYPE_N33: // Trun LEFT
                    // ---------- LEFT Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_TOP Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_DOWN Window Show "M" ----------
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 30  

                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N34: // Trun RIGHT
                    // ---------- LEFT_TOP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- LEFT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N41: 
                    // ---------- LEFT_TOP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_TOP Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- LEFT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT1, 1);
                    }
              
                    // ---------- RIGHT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[3],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  // ------------------------------------ PAL ----------------------------------------
                  case VMIX_TYPE_P11: 
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 31  

                    // ---------- Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P21: 
                           // ----------UP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
                          // ----------DOWN Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT1, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P22: 
                    // ---------- LEFT Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    break;
              
                  case VMIX_TYPE_P31: // Trun Back
                    // ---------- TOP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X1, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X1, LOCATE_YT0, 1);
                    }
              
                    // ---------- LEFT Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT2, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 32  

              
                  case VMIX_TYPE_P32: 
                    break;
              
                  case VMIX_TYPE_P33: // Trun LEFT
                    // ---------- LEFT Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_TOP Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P34: // Trun RIGHT
                    // ---------- LEFT_TOP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- LEFT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P41: 
                    // ---------- LEFT_TOP Window Show "M" ----------
                    ifBitSet(_attr[0],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT0, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT0, 1);
                    }
              
                    // ---------- RIGHT_TOP Window Show "M" ----------
                    ifBitSet(_attr[1],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT0, MIRROR);
                    } else {
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 33  

                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT0, 1);
                    }
              
                    // ---------- LEFT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[2],BIT0) {
                      DrawString(MLCT_X0, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X0, LOCATE_YT2, 1);
                    }
              
                    // ---------- RIGHT_DOWN Window Show "M" ----------
                    ifBitSet(_attr[3],BIT0) {
                      DrawString(MLCT_X2, LOCATE_YT2, MIRROR);
                    } else {
                      PCT_ClearWordsPathX(MLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
                #endif
              
                  default:
                    break;
                }
              }
              #endif
1999          #define SLCT_X0 31
2000          #define SLCT_X1 52
2001          #define SLCT_X2 73
2002          //+ code unsigned char SPEAKICON[] = {0x01,'\0'};
2003          code unsigned char SPEAKICON[] = {0x0E,'\0'};
2004          // ===========================================================================
2005          //
2006          // Show Speak Icon on OSD 
2007          //
2008          #ifdef UTC
              #else
2010          #if 1///for holger
2011          void PCT_ShowSpeakIcon(PU8 _attr)
2012          {
2013   1        PCT_PreSetForegroundColor(OSD_COL_GRN);
2014   1        switch(SYSMIXTYP) {
2015   2        #ifdef TW2835_FUNC_DEFINE  //Pinchi 20150324 add
2016   2          // ------------------------------------ NTSC ----------------------------------------
2017   2          case VMIX_TYPE_N11: 
2018   2            _ifBitSet(_attr[0],BIT4) {
2019   3              DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
2020   3            } else {
2021   3              PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
2022   3            }
2023   2            break;
2024   2      
2025   2          case VMIX_TYPE_N21:      //andy 980630
2026   2            _ifBitSet(_attr[0],BIT4) {
2027   3              DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
2028   3            } else {
2029   3              PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
2030   3            }
2031   2            _ifBitSet(_attr[0],BIT4) {
2032   3              DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
2033   3            } else {
2034   3              PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT1, 1);
2035   3            }
2036   2            break;
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 34  

2037   2      
2038   2          case VMIX_TYPE_N22: 
2039   2            _ifBitSet(_attr[0],BIT4) {
2040   3              DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
2041   3            } else {
2042   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
2043   3            }
2044   2            _ifBitSet(_attr[1],BIT4) {
2045   3              DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
2046   3            } else {
2047   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
2048   3            }
2049   2            break;
2050   2      
2051   2          case VMIX_TYPE_N31: // Trun Back
2052   2            _ifBitSet(_attr[0],BIT4) {
2053   3              DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
2054   3            } else {
2055   3              PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
2056   3            }
2057   2            _ifBitSet(_attr[1],BIT4) {
2058   3              DrawString(SLCT_X0, LOCATE_YT1, SPEAKICON);
2059   3            } else {
2060   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT1, 1);
2061   3            }
2062   2            _ifBitSet(_attr[2],BIT4) {
2063   3              DrawString(SLCT_X2, LOCATE_YT1, SPEAKICON);
2064   3            } else {
2065   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT1, 1);
2066   3            }
2067   2            break;
2068   2      
2069   2          case VMIX_TYPE_N32: 
2070   2            break;
2071   2      
2072   2          case VMIX_TYPE_N33: // Trun LEFT
2073   2            _ifBitSet(_attr[0],BIT4) {
2074   3              DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
2075   3            } else {
2076   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
2077   3            }
2078   2            _ifBitSet(_attr[1],BIT4) {
2079   3              DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
2080   3            } else {
2081   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
2082   3            }
2083   2            _ifBitSet(_attr[2],BIT4) {
2084   3              DrawString(SLCT_X2, LOCATE_YT1, SPEAKICON);
2085   3            } else {
2086   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT1, 1);
2087   3            }
2088   2            break;
2089   2      
2090   2          case VMIX_TYPE_N34: // Trun RIGHT
2091   2            _ifBitSet(_attr[0],BIT4) {
2092   3              DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
2093   3            } else {
2094   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
2095   3            }
2096   2            _ifBitSet(_attr[1],BIT4) {
2097   3              DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
2098   3            } else {
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 35  

2099   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
2100   3            }
2101   2            _ifBitSet(_attr[2],BIT4) {
2102   3              DrawString(SLCT_X0, LOCATE_YT1, SPEAKICON);
2103   3            } else {
2104   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT1, 1);
2105   3            }
2106   2            break;
2107   2      
2108   2          case VMIX_TYPE_N41: 
2109   2            _ifBitSet(_attr[0],BIT4) {
2110   3              DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
2111   3            } else {
2112   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
2113   3            }
2114   2            _ifBitSet(_attr[1],BIT4) {
2115   3              DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
2116   3            } else {
2117   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
2118   3            }
2119   2            _ifBitSet(_attr[2],BIT4) {
2120   3              DrawString(SLCT_X0, LOCATE_YT1, SPEAKICON);
2121   3            } else {
2122   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT1, 1);
2123   3            }
2124   2            _ifBitSet(_attr[3],BIT4) {
2125   3              DrawString(SLCT_X2, LOCATE_YT1, SPEAKICON);
2126   3            } else {
2127   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT1, 1);
2128   3            }
2129   2            break;
2130   2      
2131   2          // ------------------------------------ PAL ----------------------------------------
2132   2          case VMIX_TYPE_P11: 
2133   2            _ifBitSet(_attr[0],BIT4) {
2134   3              DrawString(SLCT_X1, SYSTYPE, SPEAKICON);
2135   3            } else {
2136   3              PCT_ClearWordsPathX(SLCT_X1, SYSTYPE, 1);
2137   3            }
2138   2            break;
2139   2      
2140   2          case VMIX_TYPE_P21: 
2141   2            break;
2142   2      
2143   2          case VMIX_TYPE_P22: 
2144   2            _ifBitSet(_attr[0],BIT4) {
2145   3              DrawString(SLCT_X0, SYSTYPE, SPEAKICON);
2146   3            } else {
2147   3              PCT_ClearWordsPathX(SLCT_X0, SYSTYPE, 1);
2148   3            }
2149   2            _ifBitSet(_attr[1],BIT4) {
2150   3              DrawString(SLCT_X2, SYSTYPE, SPEAKICON);
2151   3            } else {
2152   3              PCT_ClearWordsPathX(SLCT_X2, SYSTYPE, 1);
2153   3            }
2154   2            break;
2155   2      
2156   2          case VMIX_TYPE_P31: // Trun Back
2157   2            _ifBitSet(_attr[0],BIT4) {
2158   3              DrawString(SLCT_X1, SYSTYPE, SPEAKICON);
2159   3            } else {
2160   3              PCT_ClearWordsPathX(SLCT_X1, SYSTYPE, 1);
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 36  

2161   3            }
2162   2            _ifBitSet(_attr[1],BIT4) {
2163   3              DrawString(SLCT_X0, LOCATE_YT2, SPEAKICON);
2164   3            } else {
2165   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT2, 1);
2166   3            }
2167   2            _ifBitSet(_attr[2],BIT4) {
2168   3              DrawString(SLCT_X2, LOCATE_YT2, SPEAKICON);
2169   3            } else {
2170   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT2, 1);
2171   3            }
2172   2            break;
2173   2      
2174   2          case VMIX_TYPE_P32: 
2175   2            break;
2176   2      
2177   2          case VMIX_TYPE_P33: // Trun LEFT
2178   2            _ifBitSet(_attr[0],BIT4) {
2179   3              DrawString(SLCT_X0, SYSTYPE, SPEAKICON);
2180   3            } else {
2181   3              PCT_ClearWordsPathX(SLCT_X0, SYSTYPE, 1);
2182   3            }
2183   2            _ifBitSet(_attr[1],BIT4) {
2184   3              DrawString(SLCT_X2, SYSTYPE, SPEAKICON);
2185   3            } else {
2186   3              PCT_ClearWordsPathX(SLCT_X2, SYSTYPE, 1);
2187   3            }
2188   2            _ifBitSet(_attr[2],BIT4) {
2189   3              DrawString(SLCT_X2, LOCATE_YT2, SPEAKICON);
2190   3            } else {
2191   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT2, 1);
2192   3            }
2193   2            break;
2194   2      
2195   2          case VMIX_TYPE_P34: // Trun RIGHT
2196   2            _ifBitSet(_attr[0],BIT4) {
2197   3              DrawString(SLCT_X0, SYSTYPE, SPEAKICON);
2198   3            } else {
2199   3              PCT_ClearWordsPathX(SLCT_X0, SYSTYPE, 1);
2200   3            }
2201   2            _ifBitSet(_attr[1],BIT4) {
2202   3              DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
2203   3            } else {
2204   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
2205   3            }
2206   2            _ifBitSet(_attr[2],BIT4) {
2207   3              DrawString(SLCT_X0, LOCATE_YT2, SPEAKICON);
2208   3            } else {
2209   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT2, 1);
2210   3            }
2211   2            break;
2212   2      
2213   2          case VMIX_TYPE_P41: 
2214   2            _ifBitSet(_attr[0],BIT4) {
2215   3              DrawString(SLCT_X0, SYSTYPE, SPEAKICON);
2216   3            } else {
2217   3              PCT_ClearWordsPathX(SLCT_X0, SYSTYPE, 1);
2218   3            }
2219   2            _ifBitSet(_attr[1],BIT4) {
2220   3              DrawString(SLCT_X2, SYSTYPE, SPEAKICON);
2221   3            } else {
2222   3              PCT_ClearWordsPathX(SLCT_X2, SYSTYPE, 1);
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 37  

2223   3            }
2224   2            _ifBitSet(_attr[2],BIT4) {
2225   3              DrawString(SLCT_X0, LOCATE_YT2, SPEAKICON);
2226   3            } else {
2227   3              PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT2, 1);
2228   3            }
2229   2            _ifBitSet(_attr[3],BIT4) {
2230   3              DrawString(SLCT_X2, LOCATE_YT2, SPEAKICON);
2231   3            } else {
2232   3              PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT2, 1);
2233   3            }
2234   2            break;
2235   2        #else
                  // ------------------------------------ NTSC ----------------------------------------
                  case VMIX_TYPE_N11: 
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N21:      //andy 980630
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N22: 
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N31: // Trun Back
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT1, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT1, SPEAKICON);
                    } else {
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 38  

                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N32: 
                    break;
              
                  case VMIX_TYPE_N33: // Trun LEFT
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N34: // Trun RIGHT
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N41: 
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT1, 1);
                    }
                    ifBitSet(_attr[3],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT1, SPEAKICON);
                    } else {
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 39  

                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  // ------------------------------------ PAL ----------------------------------------
                  case VMIX_TYPE_P11: 
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, SYSTYPE, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, SYSTYPE, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P21: 
                    break;
              
                  case VMIX_TYPE_P22: 
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, SYSTYPE, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, SYSTYPE, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, SYSTYPE, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, SYSTYPE, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P31: // Trun Back
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, SYSTYPE, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, SYSTYPE, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT2, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P32: 
                    break;
              
                  case VMIX_TYPE_P33: // Trun LEFT
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, SYSTYPE, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, SYSTYPE, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, SYSTYPE, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, SYSTYPE, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 40  

                      DrawString(SLCT_X2, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P34: // Trun RIGHT
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, SYSTYPE, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, SYSTYPE, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, SYSTYPE, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, SYSTYPE, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P41: 
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, SYSTYPE, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, SYSTYPE, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, SYSTYPE, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, SYSTYPE, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT2, 1);
                    }
                    ifBitSet(_attr[3],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
                #endif
2456   2      
2457   2          default:
2458   2            break;
2459   2        }
2460   1      }
2461          #else
              void PCT_ShowSpeakIcon(PU8 _attr)
              {
                PCT_PreSetForegroundColor(OSD_COL_GRN);
                switch(SYSMIXTYP) {
                #ifdef TW2835_FUNC_DEFINE  //Pinchi 20150324 add
                  // ------------------------------------ NTSC ----------------------------------------
                  case VMIX_TYPE_N11: 
                    _ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 41  

                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N21:      //andy 980630
                    _ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
                    }
                    _ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N22: 
                    _ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    _ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N31: // Trun Back
                    _ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
                    }
                    _ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT1, 1);
                    }
                    _ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N32: 
                    break;
              
                  case VMIX_TYPE_N33: // Trun LEFT
                    _ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    _ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 42  

                    }
                    _ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N34: // Trun RIGHT
                    _ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    _ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    _ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N41: 
                    _ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    _ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    _ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT1, 1);
                    }
                    _ifBitSet(_attr[3],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  // ------------------------------------ PAL ----------------------------------------
                  case VMIX_TYPE_P11: 
                    _ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P21: 
                    break;
              
                  case VMIX_TYPE_P22: 
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 43  

                    _ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    _ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P31: // Trun Back
                    _ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
                    }
                    _ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT2, 1);
                    }
                    _ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P32: 
                    break;
              
                  case VMIX_TYPE_P33: // Trun LEFT
                    _ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    _ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    _ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P34: // Trun RIGHT
                    _ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    _ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 44  

                    _ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P41: 
                    _ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    _ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    _ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT2, 1);
                    }
                    _ifBitSet(_attr[3],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
                #else
                  // ------------------------------------ NTSC ----------------------------------------
                  case VMIX_TYPE_N11: 
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N21:      //andy 980630
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N22: 
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 45  

                    }
                    break;
              
                  case VMIX_TYPE_N31: // Trun Back
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT1, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N32: 
                    break;
              
                  case VMIX_TYPE_N33: // Trun LEFT
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N34: // Trun RIGHT
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT1, 1);
                    }
                    break;
              
                  case VMIX_TYPE_N41: 
                    ifBitSet(_attr[0],BIT4) {
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 46  

                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT1, 1);
                    }
                    ifBitSet(_attr[3],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT1, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT1, 1);
                    }
                    break;
              
                  // ------------------------------------ PAL ----------------------------------------
                  case VMIX_TYPE_P11: 
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P21: 
                    break;
              
                  case VMIX_TYPE_P22: 
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P31: // Trun Back
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X1, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X1, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT2, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT2, 1);
                    }
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 47  

                    break;
              
                  case VMIX_TYPE_P32: 
                    break;
              
                  case VMIX_TYPE_P33: // Trun LEFT
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P34: // Trun RIGHT
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT2, 1);
                    }
                    break;
              
                  case VMIX_TYPE_P41: 
                    ifBitSet(_attr[0],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[1],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT0, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT0, 1);
                    }
                    ifBitSet(_attr[2],BIT4) {
                      DrawString(SLCT_X0, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X0, LOCATE_YT2, 1);
                    }
                    ifBitSet(_attr[3],BIT4) {
                      DrawString(SLCT_X2, LOCATE_YT2, SPEAKICON);
                    } else {
                      PCT_ClearWordsPathX(SLCT_X2, LOCATE_YT2, 1);
                    }
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 48  

                    break;
                #endif
              
                  default:
                    break;
                }
              }
              #endif
2913          
2914          #endif
2915          
2916          #if 0 //Pinchi 20150505 change string to reduce time  //def AWT_NO_SIGNAL_MSG  //Pinchi 20150323 add
              //Pinchi 20150422 modify to H center
              #define VLS_LCT_XM0 (LOCATE_XM0-4)-8
              #define VLS_LCT_XM1 (LOCATE_XM1-4)-8
              #define VLS_LCT_XM2 (LOCATE_XM2-4)-8
              #else
2922          #define VLS_LCT_XM0 LOCATE_XM0-4
2923          #define VLS_LCT_XM1 LOCATE_XM1-4
2924          #define VLS_LCT_XM2 LOCATE_XM2-4
2925          #endif
2926          
2927          #define LOCATE_YM0  7
2928          #define LOCATE_YM1  13
2929          #define LOCATE_YM2  21
2930          
2931          #define LOCATE_PYM0 8
2932          #define LOCATE_PYM1 16
2933          #define LOCATE_PYM2 25
2934          
2935          //H #define msgVLOSS "VLoss"
2936          #if 0 //Pinchi 20150505 change string to reduce time  //def AWT_NO_SIGNAL_MSG  //Pinchi 20150323 add
              code unsigned char msgVLOSS[]= {0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1c, 0x1d, 0x1e,'\0
             -'};
              
              #define msgCLEAR_W  15  //Pinchi 20150331 modify for lenghth of NO VIDEO SIGNAL
              #else
2941          code unsigned char msgVLOSS[]= {0x0F, 0x10, 0x11, 0x12, 0x12, '\0'};  // VLoss define for HiSharp
2942          //code unsigned char msgVLOSS[]= {'\0'};  // VLoss define for HiSharp   //william-v3.5-971001
2943          
2944          #define msgCLEAR_W  5
2945          #endif
2946          
2947          
2948          // ===========================================================================
2949          //
2950          // Show VLoss on OSD when Video Signal Loss
2951          //
2952          // ===========================================================================
2953          #ifdef HS
              #else
2955          void PCT_ShowVLoss(void)
2956          {
2957   1      #if 0  //Pinchi 20150325 disable
                data U8 tmpsta;
                tmpsta = SYSVDOSGL^MSGVDOSGL;
              #endif
2961   1      
2962   1        switch(SYSMIXTYP) {
2963   2          // ------------------------------ NTSC ----------------------------
2964   2          case VMIX_TYPE_N11: 
2965   2            if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 49  

2966   2              DrawString(VLS_LCT_XM1, LOCATE_YM1, msgVLOSS) ;
2967   2            else
2968   2              PCT_ClearWordsPathX(VLS_LCT_XM1, LOCATE_YM1, msgCLEAR_W);
2969   2            break;
2970   2      
2971   2          case VMIX_TYPE_N21: 
2972   2            break;
2973   2      
2974   2          case VMIX_TYPE_N22: 
2975   2            if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
2976   2              DrawString(VLS_LCT_XM0, LOCATE_YM1, msgVLOSS);
2977   2            else
2978   2              PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_YM1, msgCLEAR_W);
2979   2            if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
2980   2              DrawString(VLS_LCT_XM2, LOCATE_YM1, msgVLOSS);
2981   2            else
2982   2              PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_YM1, msgCLEAR_W);
2983   2            break;
2984   2      
2985   2          case VMIX_TYPE_N31: // Trun Back
2986   2            if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
2987   2              DrawString(VLS_LCT_XM1, LOCATE_YM0, msgVLOSS);
2988   2            else
2989   2              PCT_ClearWordsPathX(VLS_LCT_XM1, LOCATE_YM0, msgCLEAR_W);
2990   2            if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
2991   2              DrawString(VLS_LCT_XM0, LOCATE_YM2, msgVLOSS);
2992   2            else
2993   2              PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_YM2, msgCLEAR_W);
2994   2            if(MSGVDOSGL&(0x01<<SYSWINLK[2]))
2995   2              DrawString(VLS_LCT_XM2, LOCATE_YM2, msgVLOSS);
2996   2            else
2997   2              PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_YM2, msgCLEAR_W);
2998   2            break;
2999   2      
3000   2          case VMIX_TYPE_N32: 
3001   2            break;
3002   2      
3003   2          case VMIX_TYPE_N33: // Trun LEFT
3004   2            if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
3005   2              DrawString(VLS_LCT_XM0, LOCATE_YM1, msgVLOSS);
3006   2            else
3007   2              PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_YM1, msgCLEAR_W);
3008   2            if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
3009   2              DrawString(VLS_LCT_XM2, LOCATE_YM0, msgVLOSS);
3010   2            else
3011   2              PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_YM0, msgCLEAR_W);
3012   2            if(MSGVDOSGL&(0x01<<SYSWINLK[2]))
3013   2              DrawString(VLS_LCT_XM2, LOCATE_YM2, msgVLOSS);
3014   2            else
3015   2              PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_YM2, msgCLEAR_W);
3016   2            break;
3017   2      
3018   2          case VMIX_TYPE_N34: // Trun RIGHT
3019   2            if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
3020   2              DrawString(VLS_LCT_XM0, LOCATE_YM0, msgVLOSS);
3021   2            else
3022   2              PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_YM0, msgCLEAR_W);
3023   2            if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
3024   2              DrawString(VLS_LCT_XM2, LOCATE_YM1, msgVLOSS);
3025   2            else
3026   2              PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_YM1, msgCLEAR_W);
3027   2            if(MSGVDOSGL&(0x01<<SYSWINLK[2]))
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 50  

3028   2              DrawString(VLS_LCT_XM0, LOCATE_YM2, msgVLOSS);
3029   2            else
3030   2              PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_YM2, msgCLEAR_W);
3031   2            break;
3032   2      
3033   2          case VMIX_TYPE_N41: 
3034   2            if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
3035   2              DrawString(VLS_LCT_XM0, LOCATE_YM0, msgVLOSS);
3036   2            else
3037   2              PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_YM0, msgCLEAR_W);
3038   2            if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
3039   2              DrawString(VLS_LCT_XM2, LOCATE_YM0, msgVLOSS);
3040   2            else
3041   2              PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_YM0, msgCLEAR_W);
3042   2            if(MSGVDOSGL&(0x01<<SYSWINLK[2]))
3043   2              DrawString(VLS_LCT_XM0, LOCATE_YM2, msgVLOSS);
3044   2            else
3045   2              PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_YM2, msgCLEAR_W);
3046   2            if(MSGVDOSGL&(0x01<<SYSWINLK[3]))
3047   2              DrawString(VLS_LCT_XM2, LOCATE_YM2, msgVLOSS);
3048   2            else
3049   2              PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_YM2, msgCLEAR_W);
3050   2            break;
3051   2      
3052   2          // ------------------------------ PAL ----------------------------
3053   2          case VMIX_TYPE_P11: 
3054   2            if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
3055   2              DrawString(VLS_LCT_XM1, LOCATE_PYM1, msgVLOSS) ;
3056   2            else
3057   2              PCT_ClearWordsPathX(VLS_LCT_XM1, LOCATE_PYM1, msgCLEAR_W);
3058   2            break;
3059   2      
3060   2          case VMIX_TYPE_P21: 
3061   2            break;
3062   2      
3063   2          case VMIX_TYPE_P22: 
3064   2            if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
3065   2              DrawString(VLS_LCT_XM0, LOCATE_PYM1, msgVLOSS);
3066   2            else
3067   2              PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_PYM1, msgCLEAR_W);
3068   2            if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
3069   2              DrawString(VLS_LCT_XM2, LOCATE_PYM1, msgVLOSS);
3070   2            else
3071   2              PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_PYM1, msgCLEAR_W);
3072   2            break;
3073   2      
3074   2          case VMIX_TYPE_P31: // Trun Back
3075   2            if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
3076   2              DrawString(VLS_LCT_XM1, LOCATE_PYM0, msgVLOSS);
3077   2            else
3078   2              PCT_ClearWordsPathX(VLS_LCT_XM1, LOCATE_PYM0, msgCLEAR_W);
3079   2            if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
3080   2              DrawString(VLS_LCT_XM0, LOCATE_PYM2, msgVLOSS);
3081   2            else
3082   2              PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_PYM2, msgCLEAR_W);
3083   2            if(MSGVDOSGL&(0x01<<SYSWINLK[2]))
3084   2              DrawString(VLS_LCT_XM2, LOCATE_PYM2, msgVLOSS);
3085   2            else
3086   2              PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_PYM2, msgCLEAR_W);
3087   2            break;
3088   2      
3089   2          case VMIX_TYPE_P32: 
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 51  

3090   2            break;
3091   2      
3092   2          case VMIX_TYPE_P33: // Trun LEFT
3093   2            if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
3094   2              DrawString(VLS_LCT_XM0, LOCATE_YM1, msgVLOSS);
3095   2            else
3096   2              PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_PYM1, msgCLEAR_W);
3097   2            if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
3098   2              DrawString(VLS_LCT_XM2, LOCATE_PYM0, msgVLOSS);
3099   2            else
3100   2              PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_PYM0, msgCLEAR_W);
3101   2            if(MSGVDOSGL&(0x01<<SYSWINLK[2]))
3102   2              DrawString(VLS_LCT_XM2, LOCATE_PYM2, msgVLOSS);
3103   2            else
3104   2              PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_PYM2, msgCLEAR_W);
3105   2            break;
3106   2      
3107   2          case VMIX_TYPE_P34: // Trun RIGHT
3108   2            if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
3109   2              DrawString(VLS_LCT_XM0, LOCATE_PYM0, msgVLOSS);
3110   2            else
3111   2              PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_PYM0, msgCLEAR_W);
3112   2            if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
3113   2              DrawString(VLS_LCT_XM2, LOCATE_PYM1, msgVLOSS);
3114   2            else
3115   2              PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_PYM1, msgCLEAR_W);
3116   2            if(MSGVDOSGL&(0x01<<SYSWINLK[2]))
3117   2              DrawString(VLS_LCT_XM0, LOCATE_PYM2, msgVLOSS);
3118   2            else
3119   2              PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_PYM2, msgCLEAR_W);
3120   2            break;
3121   2      
3122   2          case VMIX_TYPE_P41: 
3123   2            if(MSGVDOSGL&(0x01<<SYSWINLK[0]))
3124   2              DrawString(VLS_LCT_XM0, LOCATE_PYM0, msgVLOSS);
3125   2            else
3126   2              PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_PYM0, msgCLEAR_W);
3127   2            if(MSGVDOSGL&(0x01<<SYSWINLK[1]))
3128   2              DrawString(VLS_LCT_XM2, LOCATE_PYM0, msgVLOSS);
3129   2            else
3130   2              PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_PYM0, msgCLEAR_W);
3131   2            if(MSGVDOSGL&(0x01<<SYSWINLK[2]))
3132   2              DrawString(VLS_LCT_XM0, LOCATE_PYM2, msgVLOSS);
3133   2            else
3134   2              PCT_ClearWordsPathX(VLS_LCT_XM0, LOCATE_PYM2, msgCLEAR_W);
3135   2            if(MSGVDOSGL&(0x01<<SYSWINLK[3]))
3136   2              DrawString(VLS_LCT_XM2, LOCATE_PYM2, msgVLOSS);
3137   2            else
3138   2              PCT_ClearWordsPathX(VLS_LCT_XM2, LOCATE_PYM2, msgCLEAR_W);
3139   2            break;
3140   2      
3141   2          default:
3142   2            break;
3143   2        }
3144   1      }
3145          #endif
3146          // ===========================================================================
3147          //
3148          // Show Control Mode OSD 
3149          //
3150          #if 1//for holger pal
3151          void PCT_ShowModeIcon(void)
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 52  

3152          {
3153   1        PCT_SetOSDDrawPage(WRPHX_PAGE0);
3154   1        // Show System Mode 0:S or 1:J
3155   1        switch(SYSMODE)
3156   1        {
3157   2          case JMODE:
3158   2            PCT_PreSetBackgroundColor(OSD_COL_BLU);
3159   2            PCT_PreSetForegroundColor(OSD_COL_100WHT);
3160   2            DrawString(1, SYSTYPE, JMODEOSD);
3161   2            PCT_PreSetBackgroundColor(OSD_COL_CLR);
3162   2            break;  
3163   2      
3164   2          case SEQMODE:
3165   2            PCT_PreSetBackgroundColor(OSD_COL_BLU);
3166   2            PCT_PreSetForegroundColor(OSD_COL_100WHT);
3167   2            DrawString(1, SYSTYPE, SEQMODEOSD);
3168   2            PCT_PreSetBackgroundColor(OSD_COL_CLR);
3169   2            break;
3170   2      
3171   2          case SMODE:
3172   2            break;
3173   2        }
3174   1      }
3175          #else
              void PCT_ShowModeIcon(void)
              {
                PCT_SetOSDDrawPage(WRPHX_PAGE0);
                // Show System Mode 0:S or 1:J
                switch(SYSMODE)
                {
                  case JMODE:
                    PCT_PreSetBackgroundColor(OSD_COL_BLU);
                    PCT_PreSetForegroundColor(OSD_COL_100WHT);
                    DrawString(1, 0, JMODEOSD);
                    PCT_PreSetBackgroundColor(OSD_COL_CLR);
                    break;  
              
                  case SEQMODE:
                    PCT_PreSetBackgroundColor(OSD_COL_BLU);
                    PCT_PreSetForegroundColor(OSD_COL_100WHT);
                    DrawString(1, 0, SEQMODEOSD);
                    PCT_PreSetBackgroundColor(OSD_COL_CLR);
                    break;
              
                  case SMODE:
                    break;
                }
              }
              #endif
3201          // ===========================================================================
3202          //
3203          // Show Other OSD not Recviver Command in 50msec
3204          //
3205          void PCT_OSDActionForHS(void)
3206          {
3207   1        PCT_SetOSDDrawPage(WRPHX_PAGE0);
3208   1      #ifdef TW2835_FUNC_DEFINE  //Pinchi 20150324 add
3209   1        _ifBitSet(SYSWINATTR[0],BIT1)
3210   1      #else
                ifBitSet(SYSWINATTR[0],BIT1)
              #endif
3213   1        {
C51 COMPILER V9.60.0.0   OSDACTION                                                         07/13/2021 11:06:06 PAGE 53  

3214   2      //    PCT_OSD_ActionPthX(SYSWINATTR);
3215   2          PCT_ShowMirrorIcon(SYSWINATTR);
3216   2          #ifdef UTC
                  #else
3218   2          PCT_ShowSpeakIcon(SYSWINATTR);
3219   2          #endif    
3220   2          PCT_ShowIndicateIcon(SYSWINATTR);
3221   2        }
3222   1        PCT_EnfalshVLoss();//<960820-william>
3223   1        PCT_EnShowOSDPage(WRPHX_PAGE0);
3224   1      }
3225          
3226          
3227          // ===========================================================================
3228          // END of File 
3229          // ==========================================================================


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   5905    ----
   CONSTANT SIZE    =     37    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =      1      12
   DATA SIZE        =      1       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
