C51 COMPILER V9.60.0.0   TW2835_INIT                                                       07/13/2021 11:06:07 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE TW2835_INIT
OBJECT MODULE PLACED IN .\OBJ\TW2835_Init.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE TW2835_Init.c COMPACT OPTIMIZE(9,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(
                    -.\OBJ\TW2835_Init.lst) TABS(2) OBJECT(.\OBJ\TW2835_Init.obj)

line level    source

   1          //  **************************************************************************
   2          //
   3          //       Copyright (c) 1992-2006 Professonal Computer Technology Co., Ltd
   4          //
   5          //      All rights are reserved. Reproduction in whole or in parts is
   6          //  prohibited without the prior written consent of the copyright owner.
   7          //  --------------------------------------------------------------------------
   8          //
   9          //  Module: TW2835_Init.C
  10          //
  11          //  Purpose: Implementation of TW2835_Init.
  12          //
  13          //  Version: 0.01                                   2006/10/31 05:42¤U¤È
  14          //
  15          //  Compiler: Keil 8051 C Compiler v7.2
  16          //
  17          //  Reference:
  18          //
  19          //
  20          //
  21          //  --------------------------------------------------------------------------
  22          //  Modification:
  23          //
  24          //  R0.01 2006/10/31 05:42¤U¤È Phoenix Chuang
  25          //  Reason:
  26          //    1. Original.
  27          //  Solution:
  28          //  
  29          //  **************************************************************************
  30          //  -----------------------------------
  31          //      Header Files
  32          //  ----------------------------------- 
  33          #include "Types.h"
  34          #include "Timer.h"
  35          #include "TW2835_Init.h"
  36          #include "BusCtrl.h"
  37          #include "CommandShell.h"
  38          #include "TW28xx_Video.h"
  39          #include "OSDAction.h"
  40          
  41          #include "TW2835_Table.h"
  42          #include "Main.h"
  43          
  44          
  45          //  ------------------------------------
  46          //      Macro Definitions
  47          //  ------------------------------------ 
  48          
  49          
  50          //  ------------------------------------
  51          //      Type Definitions
  52          //  ------------------------------------
  53          sbit RSTn = P3 ^ 4;
  54          
C51 COMPILER V9.60.0.0   TW2835_INIT                                                       07/13/2021 11:06:07 PAGE 2   

  55          
  56          //  ------------------------------------
  57          //      Variables Definitions
  58          //  ------------------------------------
  59          
  60          BYTE TW2837IDCheck=FALSE;
  61          
  62          //  ------------------------------------
  63          //      Function Prototypes
  64          //  ------------------------------------
  65          
  66          
  67          // ===========================================================================
  68          //                      Parallel function description
  69          // ===========================================================================
  70          //
  71          //  TW2835 IC Reset
  72          //
  73          void PCT_InitialTW2835(void)
  74          {
  75   1        PCT_TW2835ResetN();
  76   1        SYSTYPE = DEF_SYSTEM;
  77   1      
  78   1        // Waitting Color Lock
  79   1        EnUserTimer(USERTMID1,10);
  80   1      
  81   1        PCT_TW2837IDCheck();
  82   1      
  83   1        while(USERTMVAL1!=1) {
  84   2        
  85   2          if(TW2837IDCheck==TRUE)
  86   2            {
  87   3            Wait_ms(10);
  88   3      
  89   3            if( (TW28_ReadByte(0, SENSORCHANNEL<<4)&0xC0) == 0x40) {
  90   4            SYSTYPE = PCT_DetectVideoFormat(SENSORCHANNEL);
  91   4            break;
  92   4            }
  93   3          
  94   3            }
  95   2          else
  96   2            {
  97   3              if( (TW28_ReadByte(0, SENSORCHANNEL<<4)&0x0F) == 0x0F) {
  98   4              SYSTYPE = PCT_DetectVideoFormat(SENSORCHANNEL);
  99   4              break;
 100   4              }
 101   3      
 102   3            }
 103   2          Wait_ms(10);
 104   2        }
 105   1        DisUserTimer(USERTMID1);
 106   1        
 107   1        PCT_TW2835_Initial();
 108   1        PCT_InitialOSD();
 109   1      }
 110          
 111          // ===========================================================================
 112          //
 113          //  TW2835 IC Reset
 114          //
 115          void PCT_TW2835ResetN(void)
 116          {
C51 COMPILER V9.60.0.0   TW2835_INIT                                                       07/13/2021 11:06:07 PAGE 3   

 117   1        register U16 _delay; 
 118   1      //Kane @HS 2007 0723 Ver3.4>>>>
 119   1      #if 0
                // Initial RssetN for TW2835
                DELAY_FOR(5000);
                RSTn = 0;
                DELAY_FOR(10000);
                RSTn = 1;
                DELAY_FOR(5000);
                RSTn = 0;
                DELAY_FOR(10000);
                RSTn = 1;
                DELAY_FOR(5000);
              #endif
 131   1        RSTn = 0;
 132   1        DELAY_FOR(100);////about 1.2ms
 133   1        RSTn = 1;
 134   1      //Kane @HS 2007 0723 Ver3.4<<<<
 135   1      }
 136          // ===========================================================================
 137          //
 138          //  TW2837 ID check
 139          //
 140          // ===========================================================================
 141          
 142          void PCT_TW2837IDCheck(void)
 143          {
 144   1        if( (TW28_ReadByte(0, 0xFE)&0x30) == 0x30) 
 145   1          TW2837IDCheck=TRUE;
 146   1        else 
 147   1          TW2837IDCheck=FALSE;
 148   1      }
 149          
 150          // ===========================================================================
 151          //
 152          //  Video Initial Procedure
 153          //
 154          void PCT_TW2835_Initial(void)
 155          {
 156   1        register U16 offset;
 157   1        
 158   1        offset = SYSTYPE * 256; 
 159   1      if(TW2837IDCheck==TRUE)
 160   1      {
 161   2      
 162   2        TW28_WriteTable(0x00, 0x00, TW2837_Page0+offset, ((16*5)+8));
 163   2      
 164   2        TW28_WriteTable(0x00, 0x60, (TW2837_Page0+offset+0x60), (16));
 165   2        TW28_WriteTable(0x00, 0x70, (TW2837_Page0+offset+0x70), (4));
 166   2        
 167   2        TW28_WriteTable(0x00, 0x80, (TW2837_Page0+offset+0x80), (16*5));
 168   2      
 169   2        TW28_WriteTable(0x01, 0x00, TW2837_Page1+offset, 160);
 170   2      
 171   2        TW28_WriteTable(0x01, 0x30, TW2837_Page1+offset+0x30, 32);
 172   2        
 173   2        TW28_WriteTable(0x01, 0xA0, TW2837_Page1+offset+0xA0, 16);
 174   2      
 175   2      
 176   2        TW28_WriteTable(0x02, 0x10, TW2837_Page2, (16*3));
 177   2        TW28_WriteTable(0x02, 0x50, TW2837_Page2+0x30, (16*1));
 178   2        TW28_WriteTable(0x02, 0x60, TW2837_Page2+0x40, (16*4));
C51 COMPILER V9.60.0.0   TW2835_INIT                                                       07/13/2021 11:06:07 PAGE 4   

 179   2      
 180   2        if(SYSTYPE == VDO_NTSC){
 181   3          TW28_WriteTable(DVC_PG1,0x30,tbl_ntsc_pg1_pic_qd,16);   //... normal quad
 182   3          TW28_WriteTable(DVC_PG1,0x40,tbl_ntsc_pg1_pic_9_rb,16);
 183   3          TW28_WriteTable(DVC_PG1,0xa0,tbl_ntsc_pg1_enc,16);  
 184   3          TW28_WriteByte(DVC_PG1,0x00,0x00);
 185   3        }
 186   2        else{
 187   3          TW28_WriteTable(DVC_PG1,0x30,tbl_pal_pg1_pic_qd,16);      //... normal quad
 188   3          TW28_WriteTable(DVC_PG1,0x30,tbl_pal_pg1_pic_9_lt,16);    //... non-realtime
 189   3          TW28_WriteTable(DVC_PG1,0x40,tbl_pal_pg1_pic_9_rb,16);
 190   3          TW28_WriteTable(DVC_PG1,0xa0,tbl_pal_pg1_enc,16); 
 191   3          TW28_WriteByte(DVC_PG1,0x00,0x80);
 192   3        }
 193   2      
 194   2      }
 195   1      else
 196   1      {
 197   2          TW28_WriteTable(0x00, 0x00, TW2835_Page0+offset, 192);
 198   2          TW28_WriteTable(0x01, 0x00, TW2835_Page1+offset, 160);
 199   2        
 200   2          TW28_WriteTable(0x01, 0x30, TW2835_Page1+offset+0x30, 32);
 201   2        
 202   2          TW28_WriteTable(0x01, 0xA0, TW2835_Page1+offset+0xA0, 16);
 203   2      
 204   2      }
 205   1      
 206   1      
 207   1      
 208   1      }
 209          
 210          // ===========================================================================
 211          //
 212          //  Video Initial Procedure
 213          //
 214          void PCT_ChangeSystemType(U8 _sys)
 215          {
 216   1        register U16 offset;
 217   1        
 218   1        offset = _sys * 256;
 219   1      
 220   1        if(TW2837IDCheck==TRUE)
 221   1        { 
 222   2          TW28_WriteTable(0x00, 0x00, TW2837_Page0+offset+0x00, 64);
 223   2      
 224   2          TW28_WriteTable(0x01, 0x30, TW2837_Page1+offset+0x30, 32);
 225   2      
 226   2          TW28_WriteTable(0x01, 0x00, TW2837_Page1+offset+0x00, 1);
 227   2          TW28_WriteTable(0x01, 0xA7, TW2837_Page1+offset+0xA7, 3);
 228   2        }
 229   1        else
 230   1          
 231   1        {
 232   2          TW28_WriteTable(0x00, 0x00, TW2835_Page0+offset+0x00, 64);
 233   2          
 234   2            TW28_WriteTable(0x01, 0x30, TW2835_Page1+offset+0x30, 32);
 235   2          
 236   2            TW28_WriteTable(0x01, 0x00, TW2835_Page1+offset+0x00, 1);
 237   2            TW28_WriteTable(0x01, 0xA7, TW2835_Page1+offset+0xA7, 3);
 238   2      
 239   2        }
 240   1      
C51 COMPILER V9.60.0.0   TW2835_INIT                                                       07/13/2021 11:06:07 PAGE 5   

 241   1      }
 242          
 243          // ===========================================================================
 244          //
 245          //
 246          //
 247          
 248          
 249          // ===========================================================================
 250          // END of File 
 251          // ===========================================================================


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    815    ----
   CONSTANT SIZE    =   2320    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =      1       4
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
