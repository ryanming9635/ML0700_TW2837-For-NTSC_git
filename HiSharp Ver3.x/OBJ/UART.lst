C51 COMPILER V9.60.0.0   UART                                                              07/14/2021 16:12:57 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\OBJ\UART.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE UART.c COMPACT OPTIMIZE(9,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\OBJ\U
                    -ART.lst) TABS(2) OBJECT(.\OBJ\UART.obj)

line level    source

   1          //  **************************************************************************
   2          //
   3          //       Copyright (c) 1992-2006 Professonal Computer Technology Co., Ltd
   4          //
   5          //      All rights are reserved. Reproduction in whole or in parts is
   6          //  prohibited without the prior written consent of the copyright owner.
   7          //  --------------------------------------------------------------------------
   8          //
   9          //  Module: UART.C
  10          //
  11          //  Purpose: Implementation of UART.
  12          //
  13          //  Version: 0.01                                   2006/10/22 10:39¤U¤È
  14          //
  15          //  Compiler: Keil 8051 C Compiler v7.2
  16          //
  17          //  Reference:
  18          //
  19          //
  20          //
  21          //  --------------------------------------------------------------------------
  22          //  Modification:
  23          //
  24          //  R0.01 2006/10/22 10:39¤U¤È Phoenix Chuang
  25          //  Reason:
  26          //    1. Original.
  27          //  Solution:
  28          //  
  29          //  **************************************************************************
  30          //  -----------------------------------
  31          //      Header Files
  32          //  ----------------------------------- 
  33          #include "Types.h"
  34          #include "UART.h"
  35          #include "Main.h"
  36          
  37          //  ------------------------------------
  38          //      Macro Definitions
  39          //  ------------------------------------ 
  40          
  41          
  42          //  ------------------------------------
  43          //      Type Definitions
  44          //  ------------------------------------
  45          
  46          
  47          //  ------------------------------------
  48          //      Variables Definitions
  49          //  ------------------------------------
  50          #define RS_RECV_MAX_BUFF 80
  51            
  52          BYTE RS_RECVBUF[RS_RECV_MAX_BUFF];
  53          BYTE RsRxRp,RsRxWp;
  54          
C51 COMPILER V9.60.0.0   UART                                                              07/14/2021 16:12:57 PAGE 2   

  55          
  56          //  ------------------------------------
  57          //      Function Prototypes
  58          //  ------------------------------------
  59          
  60          // ===========================================================================
  61          //                      Parallel function description
  62          // ===========================================================================
  63          //
  64          //    Initial UART                             
  65          //
  66          void InitialUART (void)
  67          {
  68   1        // Useing Interrupt RS
  69   1        PS=1;
  70   1        ES=1;
  71   1      
  72   1      //  // Useing Interrupt Timer1
  73   1      //  PT1=1;
  74   1      //  ET1=1;
  75   1      
  76   1      #if (TW2835_MCU == TW8816_MODEL_MEGAWIN)  //Pinchi 20150323 add
  77   1        TH1 = 0xf4;         // 24M HZ
  78   1      #elif (TW2835_MCU == TW8806_MODEL_WINBOND)
                TH1 = B9600;        // 40M HZ
              #else
                TH1 = SET_BAUDRATE(9600); // 22.118M HZ
              #endif
  83   1      
  84   1        TR1 = 1;          // Start timer 1
  85   1      
  86   1        RsRxRp = 0;
  87   1        RsRxWp = 0;
  88   1      }
  89          
  90          // ===========================================================================
  91          //
  92          //    Serial RX Check                            
  93          //
  94          BYTE RS_RxReady (void)
  95          {
  96   1        if( RsRxWp == RsRxRp ) return false;
  97   1        else return true;
  98   1      }
  99          
 100          //=============================================================================
 101          //
 102          //    Serial RX                              
 103          //
 104          BYTE RS_rx (void)
 105          {
 106   1        register BYTE ret;
 107   1          
 108   1        ES = 0;
 109   1        //Kane @HS 2007 0809 Ver3.5
 110   1        //if(RS_RECVBUF[RsRxRp+3]=='T' && RS_RECVBUF[RsRxRp+2]=='W' && RS_RECVBUF[RsRxRp+1]=='3'  && RS_RECVBUF[R
             -sRxRp]=='T' )
 111   1        //  return TWCMD;
 112   1        ret = RS_RECVBUF[RsRxRp];
 113   1        RsRxRp++;
 114   1        if(RsRxRp >= RS_RECV_MAX_BUFF) 
 115   1          RsRxRp = 0;
C51 COMPILER V9.60.0.0   UART                                                              07/14/2021 16:12:57 PAGE 3   

 116   1        ES = 1;
 117   1      
 118   1        return ret;
 119   1      }
 120          
 121          //=============================================================================
 122          //
 123          //    Serial TX                              
 124          //
 125          void RS_tx (BYTE tx_buf)
 126          {
 127   1        while(1) {
 128   2          if(TI) {
 129   3            SBUF = tx_buf;
 130   3            TI = 0;
 131   3            break;
 132   3          }
 133   2        }
 134   1      }
 135          
 136          // ===========================================================================
 137          //
 138          //    Serial Interrupt
 139          //
 140          void RS_interrupt(void) interrupt 4 using 1
 141          {
 142   1        if( RI ) {          //--- Receive interrupt ----
 143   2          RI = 0;
 144   2      
 145   2          #if 1//ryan@20170914
 146   2      
 147   2          RS_RECVBUF[RsRxWp] = SBUF;
 148   2          RsRxWp++;
 149   2          if( RsRxWp >= RS_RECV_MAX_BUFF ) RsRxWp = 0;
 150   2      
 151   2          #else
                  if(RsRxWp+1==RsRxRp) RsRxRp++;
                  if(RsRxWp==RS_RECV_MAX_BUFF-1 && RsRxRp==0) RsRxRp++;
                  if( RsRxRp >= RS_RECV_MAX_BUFF ) RsRxRp = 0;
              
                  RS_RECVBUF[RsRxWp] = SBUF;
                  RsRxWp++;
                  if( RsRxWp >= RS_RECV_MAX_BUFF ) RsRxWp = 0;
                  #endif
 160   2          
 161   2        }
 162   1      }
 163          
 164          // ===========================================================================
 165          // END of File 
 166          // ===========================================================================
 167          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    108    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =     82    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V9.60.0.0   UART                                                              07/14/2021 16:12:57 PAGE 4   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
